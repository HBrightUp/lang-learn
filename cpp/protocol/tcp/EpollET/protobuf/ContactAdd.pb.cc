// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ContactAdd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ContactAdd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MarsContactAdd {

namespace {

const ::google::protobuf::Descriptor* ContactAdd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContactAdd_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfoAB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfoAB_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ContactAdd_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ContactAdd_2eproto() {
  protobuf_AddDesc_ContactAdd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ContactAdd.proto");
  GOOGLE_CHECK(file != NULL);
  ContactAdd_descriptor_ = file->message_type(0);
  static const int ContactAdd_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAdd, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAdd, optiontype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAdd, userida_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAdd, useridb_),
  };
  ContactAdd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ContactAdd_descriptor_,
      ContactAdd::internal_default_instance(),
      ContactAdd_offsets_,
      -1,
      -1,
      -1,
      sizeof(ContactAdd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContactAdd, _internal_metadata_));
  UserInfoAB_descriptor_ = file->message_type(1);
  static const int UserInfoAB_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, typeoption_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, phone_),
  };
  UserInfoAB_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserInfoAB_descriptor_,
      UserInfoAB::internal_default_instance(),
      UserInfoAB_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserInfoAB),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoAB, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ContactAdd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ContactAdd_descriptor_, ContactAdd::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserInfoAB_descriptor_, UserInfoAB::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ContactAdd_2eproto() {
  ContactAdd_default_instance_.Shutdown();
  delete ContactAdd_reflection_;
  UserInfoAB_default_instance_.Shutdown();
  delete UserInfoAB_reflection_;
}

void protobuf_InitDefaults_ContactAdd_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ContactAdd_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UserInfoAB_default_instance_.DefaultConstruct();
  ContactAdd_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserInfoAB_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ContactAdd_2eproto_once_);
void protobuf_InitDefaults_ContactAdd_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ContactAdd_2eproto_once_,
                 &protobuf_InitDefaults_ContactAdd_2eproto_impl);
}
void protobuf_AddDesc_ContactAdd_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ContactAdd_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020ContactAdd.proto\022\016MarsContactAdd\"S\n\nCo"
    "ntactAdd\022\017\n\007msgtype\030\001 \001(\r\022\022\n\noptiontype\030"
    "\002 \001(\r\022\017\n\007useridA\030\003 \001(\r\022\017\n\007useridB\030\004 \001(\r\""
    "\251\001\n\nUserInfoAB\022\017\n\007msgtype\030\001 \001(\r\022\022\n\ntypeO"
    "ption\030\002 \001(\r\022\016\n\006userId\030\003 \001(\r\022\014\n\004name\030\004 \001("
    "\t\022\014\n\004head\030\005 \001(\t\022\020\n\010birthday\030\006 \001(\t\022\r\n\005ema"
    "il\030\007 \001(\t\022\r\n\005token\030\010 \001(\t\022\013\n\003sex\030\t \001(\r\022\r\n\005"
    "phone\030\n \001(\tb\006proto3", 299);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ContactAdd.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ContactAdd_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ContactAdd_2eproto_once_);
void protobuf_AddDesc_ContactAdd_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ContactAdd_2eproto_once_,
                 &protobuf_AddDesc_ContactAdd_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ContactAdd_2eproto {
  StaticDescriptorInitializer_ContactAdd_2eproto() {
    protobuf_AddDesc_ContactAdd_2eproto();
  }
} static_descriptor_initializer_ContactAdd_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactAdd::kMsgtypeFieldNumber;
const int ContactAdd::kOptiontypeFieldNumber;
const int ContactAdd::kUseridAFieldNumber;
const int ContactAdd::kUseridBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactAdd::ContactAdd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ContactAdd_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MarsContactAdd.ContactAdd)
}

void ContactAdd::InitAsDefaultInstance() {
}

ContactAdd::ContactAdd(const ContactAdd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MarsContactAdd.ContactAdd)
}

void ContactAdd::SharedCtor() {
  ::memset(&msgtype_, 0, reinterpret_cast<char*>(&useridb_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(useridb_));
  _cached_size_ = 0;
}

ContactAdd::~ContactAdd() {
  // @@protoc_insertion_point(destructor:MarsContactAdd.ContactAdd)
  SharedDtor();
}

void ContactAdd::SharedDtor() {
}

void ContactAdd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactAdd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContactAdd_descriptor_;
}

const ContactAdd& ContactAdd::default_instance() {
  protobuf_InitDefaults_ContactAdd_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ContactAdd> ContactAdd_default_instance_;

ContactAdd* ContactAdd::New(::google::protobuf::Arena* arena) const {
  ContactAdd* n = new ContactAdd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:MarsContactAdd.ContactAdd)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ContactAdd, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ContactAdd*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtype_, useridb_);

#undef ZR_HELPER_
#undef ZR_

}

bool ContactAdd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MarsContactAdd.ContactAdd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgtype = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_optiontype;
        break;
      }

      // optional uint32 optiontype = 2;
      case 2: {
        if (tag == 16) {
         parse_optiontype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optiontype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_useridA;
        break;
      }

      // optional uint32 useridA = 3;
      case 3: {
        if (tag == 24) {
         parse_useridA:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userida_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_useridB;
        break;
      }

      // optional uint32 useridB = 4;
      case 4: {
        if (tag == 32) {
         parse_useridB:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &useridb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MarsContactAdd.ContactAdd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MarsContactAdd.ContactAdd)
  return false;
#undef DO_
}

void ContactAdd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MarsContactAdd.ContactAdd)
  // optional uint32 msgtype = 1;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgtype(), output);
  }

  // optional uint32 optiontype = 2;
  if (this->optiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->optiontype(), output);
  }

  // optional uint32 useridA = 3;
  if (this->userida() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userida(), output);
  }

  // optional uint32 useridB = 4;
  if (this->useridb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->useridb(), output);
  }

  // @@protoc_insertion_point(serialize_end:MarsContactAdd.ContactAdd)
}

::google::protobuf::uint8* ContactAdd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MarsContactAdd.ContactAdd)
  // optional uint32 msgtype = 1;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgtype(), target);
  }

  // optional uint32 optiontype = 2;
  if (this->optiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->optiontype(), target);
  }

  // optional uint32 useridA = 3;
  if (this->userida() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userida(), target);
  }

  // optional uint32 useridB = 4;
  if (this->useridb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->useridb(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MarsContactAdd.ContactAdd)
  return target;
}

size_t ContactAdd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MarsContactAdd.ContactAdd)
  size_t total_size = 0;

  // optional uint32 msgtype = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // optional uint32 optiontype = 2;
  if (this->optiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->optiontype());
  }

  // optional uint32 useridA = 3;
  if (this->userida() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userida());
  }

  // optional uint32 useridB = 4;
  if (this->useridb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->useridb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactAdd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MarsContactAdd.ContactAdd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ContactAdd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactAdd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MarsContactAdd.ContactAdd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MarsContactAdd.ContactAdd)
    UnsafeMergeFrom(*source);
  }
}

void ContactAdd::MergeFrom(const ContactAdd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MarsContactAdd.ContactAdd)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ContactAdd::UnsafeMergeFrom(const ContactAdd& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.optiontype() != 0) {
    set_optiontype(from.optiontype());
  }
  if (from.userida() != 0) {
    set_userida(from.userida());
  }
  if (from.useridb() != 0) {
    set_useridb(from.useridb());
  }
}

void ContactAdd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MarsContactAdd.ContactAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactAdd::CopyFrom(const ContactAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MarsContactAdd.ContactAdd)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ContactAdd::IsInitialized() const {

  return true;
}

void ContactAdd::Swap(ContactAdd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactAdd::InternalSwap(ContactAdd* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(optiontype_, other->optiontype_);
  std::swap(userida_, other->userida_);
  std::swap(useridb_, other->useridb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContactAdd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContactAdd_descriptor_;
  metadata.reflection = ContactAdd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ContactAdd

// optional uint32 msgtype = 1;
void ContactAdd::clear_msgtype() {
  msgtype_ = 0u;
}
::google::protobuf::uint32 ContactAdd::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.msgtype)
  return msgtype_;
}
void ContactAdd::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.msgtype)
}

// optional uint32 optiontype = 2;
void ContactAdd::clear_optiontype() {
  optiontype_ = 0u;
}
::google::protobuf::uint32 ContactAdd::optiontype() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.optiontype)
  return optiontype_;
}
void ContactAdd::set_optiontype(::google::protobuf::uint32 value) {
  
  optiontype_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.optiontype)
}

// optional uint32 useridA = 3;
void ContactAdd::clear_userida() {
  userida_ = 0u;
}
::google::protobuf::uint32 ContactAdd::userida() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.useridA)
  return userida_;
}
void ContactAdd::set_userida(::google::protobuf::uint32 value) {
  
  userida_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.useridA)
}

// optional uint32 useridB = 4;
void ContactAdd::clear_useridb() {
  useridb_ = 0u;
}
::google::protobuf::uint32 ContactAdd::useridb() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.useridB)
  return useridb_;
}
void ContactAdd::set_useridb(::google::protobuf::uint32 value) {
  
  useridb_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.useridB)
}

inline const ContactAdd* ContactAdd::internal_default_instance() {
  return &ContactAdd_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfoAB::kMsgtypeFieldNumber;
const int UserInfoAB::kTypeOptionFieldNumber;
const int UserInfoAB::kUserIdFieldNumber;
const int UserInfoAB::kNameFieldNumber;
const int UserInfoAB::kHeadFieldNumber;
const int UserInfoAB::kBirthdayFieldNumber;
const int UserInfoAB::kEmailFieldNumber;
const int UserInfoAB::kTokenFieldNumber;
const int UserInfoAB::kSexFieldNumber;
const int UserInfoAB::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfoAB::UserInfoAB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ContactAdd_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MarsContactAdd.UserInfoAB)
}

void UserInfoAB::InitAsDefaultInstance() {
}

UserInfoAB::UserInfoAB(const UserInfoAB& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MarsContactAdd.UserInfoAB)
}

void UserInfoAB::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(sex_));
  _cached_size_ = 0;
}

UserInfoAB::~UserInfoAB() {
  // @@protoc_insertion_point(destructor:MarsContactAdd.UserInfoAB)
  SharedDtor();
}

void UserInfoAB::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfoAB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfoAB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfoAB_descriptor_;
}

const UserInfoAB& UserInfoAB::default_instance() {
  protobuf_InitDefaults_ContactAdd_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserInfoAB> UserInfoAB_default_instance_;

UserInfoAB* UserInfoAB::New(::google::protobuf::Arena* arena) const {
  UserInfoAB* n = new UserInfoAB;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfoAB::Clear() {
// @@protoc_insertion_point(message_clear_start:MarsContactAdd.UserInfoAB)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserInfoAB, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserInfoAB*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgtype_, userid_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0u;
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserInfoAB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MarsContactAdd.UserInfoAB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgtype = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_typeOption;
        break;
      }

      // optional uint32 typeOption = 2;
      case 2: {
        if (tag == 16) {
         parse_typeOption:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &typeoption_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // optional uint32 userId = 3;
      case 3: {
        if (tag == 24) {
         parse_userId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MarsContactAdd.UserInfoAB.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_head;
        break;
      }

      // optional string head = 5;
      case 5: {
        if (tag == 42) {
         parse_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->head().data(), this->head().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MarsContactAdd.UserInfoAB.head"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_birthday;
        break;
      }

      // optional string birthday = 6;
      case 6: {
        if (tag == 50) {
         parse_birthday:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), this->birthday().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MarsContactAdd.UserInfoAB.birthday"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_email;
        break;
      }

      // optional string email = 7;
      case 7: {
        if (tag == 58) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MarsContactAdd.UserInfoAB.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_token;
        break;
      }

      // optional string token = 8;
      case 8: {
        if (tag == 66) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MarsContactAdd.UserInfoAB.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_sex;
        break;
      }

      // optional uint32 sex = 9;
      case 9: {
        if (tag == 72) {
         parse_sex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_phone;
        break;
      }

      // optional string phone = 10;
      case 10: {
        if (tag == 82) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MarsContactAdd.UserInfoAB.phone"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MarsContactAdd.UserInfoAB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MarsContactAdd.UserInfoAB)
  return false;
#undef DO_
}

void UserInfoAB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MarsContactAdd.UserInfoAB)
  // optional uint32 msgtype = 1;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgtype(), output);
  }

  // optional uint32 typeOption = 2;
  if (this->typeoption() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->typeoption(), output);
  }

  // optional uint32 userId = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string head = 5;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.head");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->head(), output);
  }

  // optional string birthday = 6;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->birthday(), output);
  }

  // optional string email = 7;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->email(), output);
  }

  // optional string token = 8;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->token(), output);
  }

  // optional uint32 sex = 9;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->sex(), output);
  }

  // optional string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phone(), output);
  }

  // @@protoc_insertion_point(serialize_end:MarsContactAdd.UserInfoAB)
}

::google::protobuf::uint8* UserInfoAB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MarsContactAdd.UserInfoAB)
  // optional uint32 msgtype = 1;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgtype(), target);
  }

  // optional uint32 typeOption = 2;
  if (this->typeoption() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->typeoption(), target);
  }

  // optional uint32 userId = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userid(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string head = 5;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.head");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->head(), target);
  }

  // optional string birthday = 6;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->birthday(), target);
  }

  // optional string email = 7;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->email(), target);
  }

  // optional string token = 8;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->token(), target);
  }

  // optional uint32 sex = 9;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->sex(), target);
  }

  // optional string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MarsContactAdd.UserInfoAB.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phone(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MarsContactAdd.UserInfoAB)
  return target;
}

size_t UserInfoAB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MarsContactAdd.UserInfoAB)
  size_t total_size = 0;

  // optional uint32 msgtype = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  // optional uint32 typeOption = 2;
  if (this->typeoption() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->typeoption());
  }

  // optional uint32 userId = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string head = 5;
  if (this->head().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head());
  }

  // optional string birthday = 6;
  if (this->birthday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // optional string email = 7;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string token = 8;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional uint32 sex = 9;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // optional string phone = 10;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfoAB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MarsContactAdd.UserInfoAB)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserInfoAB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfoAB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MarsContactAdd.UserInfoAB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MarsContactAdd.UserInfoAB)
    UnsafeMergeFrom(*source);
  }
}

void UserInfoAB::MergeFrom(const UserInfoAB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MarsContactAdd.UserInfoAB)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserInfoAB::UnsafeMergeFrom(const UserInfoAB& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.typeoption() != 0) {
    set_typeoption(from.typeoption());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.head().size() > 0) {

    head_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_);
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
}

void UserInfoAB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MarsContactAdd.UserInfoAB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfoAB::CopyFrom(const UserInfoAB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MarsContactAdd.UserInfoAB)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserInfoAB::IsInitialized() const {

  return true;
}

void UserInfoAB::Swap(UserInfoAB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfoAB::InternalSwap(UserInfoAB* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(typeoption_, other->typeoption_);
  std::swap(userid_, other->userid_);
  name_.Swap(&other->name_);
  head_.Swap(&other->head_);
  birthday_.Swap(&other->birthday_);
  email_.Swap(&other->email_);
  token_.Swap(&other->token_);
  std::swap(sex_, other->sex_);
  phone_.Swap(&other->phone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfoAB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfoAB_descriptor_;
  metadata.reflection = UserInfoAB_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfoAB

// optional uint32 msgtype = 1;
void UserInfoAB::clear_msgtype() {
  msgtype_ = 0u;
}
::google::protobuf::uint32 UserInfoAB::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.msgtype)
  return msgtype_;
}
void UserInfoAB::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.msgtype)
}

// optional uint32 typeOption = 2;
void UserInfoAB::clear_typeoption() {
  typeoption_ = 0u;
}
::google::protobuf::uint32 UserInfoAB::typeoption() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.typeOption)
  return typeoption_;
}
void UserInfoAB::set_typeoption(::google::protobuf::uint32 value) {
  
  typeoption_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.typeOption)
}

// optional uint32 userId = 3;
void UserInfoAB::clear_userid() {
  userid_ = 0u;
}
::google::protobuf::uint32 UserInfoAB::userid() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.userId)
  return userid_;
}
void UserInfoAB::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.userId)
}

// optional string name = 4;
void UserInfoAB::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfoAB::name() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.name)
}
void UserInfoAB::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.name)
}
void UserInfoAB::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.name)
}
::std::string* UserInfoAB::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoAB::release_name() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.name)
}

// optional string head = 5;
void UserInfoAB::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfoAB::head() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.head)
}
void UserInfoAB::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.head)
}
void UserInfoAB::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.head)
}
::std::string* UserInfoAB::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoAB::release_head() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.head)
}

// optional string birthday = 6;
void UserInfoAB::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfoAB::birthday() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.birthday)
  return birthday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.birthday)
}
void UserInfoAB::set_birthday(const char* value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.birthday)
}
void UserInfoAB::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.birthday)
}
::std::string* UserInfoAB::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoAB::release_birthday() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.birthday)
}

// optional string email = 7;
void UserInfoAB::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfoAB::email() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.email)
}
void UserInfoAB::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.email)
}
void UserInfoAB::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.email)
}
::std::string* UserInfoAB::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoAB::release_email() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.email)
}

// optional string token = 8;
void UserInfoAB::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfoAB::token() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.token)
}
void UserInfoAB::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.token)
}
void UserInfoAB::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.token)
}
::std::string* UserInfoAB::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoAB::release_token() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.token)
}

// optional uint32 sex = 9;
void UserInfoAB::clear_sex() {
  sex_ = 0u;
}
::google::protobuf::uint32 UserInfoAB::sex() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.sex)
  return sex_;
}
void UserInfoAB::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.sex)
}

// optional string phone = 10;
void UserInfoAB::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfoAB::phone() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.phone)
}
void UserInfoAB::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.phone)
}
void UserInfoAB::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.phone)
}
::std::string* UserInfoAB::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoAB::release_phone() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoAB::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.phone)
}

inline const UserInfoAB* UserInfoAB::internal_default_instance() {
  return &UserInfoAB_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MarsContactAdd

// @@protoc_insertion_point(global_scope)
