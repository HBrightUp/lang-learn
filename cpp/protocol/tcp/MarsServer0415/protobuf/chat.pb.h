// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#ifndef PROTOBUF_chat_2eproto__INCLUDED
#define PROTOBUF_chat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MarsMsgChat {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_chat_2eproto();
void protobuf_InitDefaults_chat_2eproto();
void protobuf_AssignDesc_chat_2eproto();
void protobuf_ShutdownFile_chat_2eproto();

class ContactAdd;
class LoginRequst;
class LogoutRequst;
class MsgOffline;
class PushRsp;
class SendMsgReq;
class SendMsgRsp;
class UserInfoAB;

// ===================================================================

class LoginRequst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.LoginRequst) */ {
 public:
  LoginRequst();
  virtual ~LoginRequst();

  LoginRequst(const LoginRequst& from);

  inline LoginRequst& operator=(const LoginRequst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequst& default_instance();

  static const LoginRequst* internal_default_instance();

  void Swap(LoginRequst* other);

  // implements Message ----------------------------------------------

  inline LoginRequst* New() const { return New(NULL); }

  LoginRequst* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequst& from);
  void MergeFrom(const LoginRequst& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequst* other);
  void UnsafeMergeFrom(const LoginRequst& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required int32 userID = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.LoginRequst)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_userid();
  inline void clear_has_userid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginRequst> LoginRequst_default_instance_;

// -------------------------------------------------------------------

class LogoutRequst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.LogoutRequst) */ {
 public:
  LogoutRequst();
  virtual ~LogoutRequst();

  LogoutRequst(const LogoutRequst& from);

  inline LogoutRequst& operator=(const LogoutRequst& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequst& default_instance();

  static const LogoutRequst* internal_default_instance();

  void Swap(LogoutRequst* other);

  // implements Message ----------------------------------------------

  inline LogoutRequst* New() const { return New(NULL); }

  LogoutRequst* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutRequst& from);
  void MergeFrom(const LogoutRequst& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogoutRequst* other);
  void UnsafeMergeFrom(const LogoutRequst& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userID = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.LogoutRequst)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 userid_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LogoutRequst> LogoutRequst_default_instance_;

// -------------------------------------------------------------------

class ContactAdd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.ContactAdd) */ {
 public:
  ContactAdd();
  virtual ~ContactAdd();

  ContactAdd(const ContactAdd& from);

  inline ContactAdd& operator=(const ContactAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactAdd& default_instance();

  static const ContactAdd* internal_default_instance();

  void Swap(ContactAdd* other);

  // implements Message ----------------------------------------------

  inline ContactAdd* New() const { return New(NULL); }

  ContactAdd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactAdd& from);
  void MergeFrom(const ContactAdd& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContactAdd* other);
  void UnsafeMergeFrom(const ContactAdd& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 msgtype = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::google::protobuf::uint32 msgtype() const;
  void set_msgtype(::google::protobuf::uint32 value);

  // required uint32 optiontype = 2;
  bool has_optiontype() const;
  void clear_optiontype();
  static const int kOptiontypeFieldNumber = 2;
  ::google::protobuf::uint32 optiontype() const;
  void set_optiontype(::google::protobuf::uint32 value);

  // required uint32 useridA = 3;
  bool has_userida() const;
  void clear_userida();
  static const int kUseridAFieldNumber = 3;
  ::google::protobuf::uint32 userida() const;
  void set_userida(::google::protobuf::uint32 value);

  // required uint32 useridB = 4;
  bool has_useridb() const;
  void clear_useridb();
  static const int kUseridBFieldNumber = 4;
  ::google::protobuf::uint32 useridb() const;
  void set_useridb(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.ContactAdd)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_optiontype();
  inline void clear_has_optiontype();
  inline void set_has_userida();
  inline void clear_has_userida();
  inline void set_has_useridb();
  inline void clear_has_useridb();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 optiontype_;
  ::google::protobuf::uint32 userida_;
  ::google::protobuf::uint32 useridb_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ContactAdd> ContactAdd_default_instance_;

// -------------------------------------------------------------------

class UserInfoAB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.UserInfoAB) */ {
 public:
  UserInfoAB();
  virtual ~UserInfoAB();

  UserInfoAB(const UserInfoAB& from);

  inline UserInfoAB& operator=(const UserInfoAB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoAB& default_instance();

  static const UserInfoAB* internal_default_instance();

  void Swap(UserInfoAB* other);

  // implements Message ----------------------------------------------

  inline UserInfoAB* New() const { return New(NULL); }

  UserInfoAB* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfoAB& from);
  void MergeFrom(const UserInfoAB& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserInfoAB* other);
  void UnsafeMergeFrom(const UserInfoAB& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 msgtype = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::google::protobuf::uint32 msgtype() const;
  void set_msgtype(::google::protobuf::uint32 value);

  // required uint32 typeOption = 2;
  bool has_typeoption() const;
  void clear_typeoption();
  static const int kTypeOptionFieldNumber = 2;
  ::google::protobuf::uint32 typeoption() const;
  void set_typeoption(::google::protobuf::uint32 value);

  // required uint32 userId = 3;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // required string name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string head = 5;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 5;
  const ::std::string& head() const;
  void set_head(const ::std::string& value);
  void set_head(const char* value);
  void set_head(const char* value, size_t size);
  ::std::string* mutable_head();
  ::std::string* release_head();
  void set_allocated_head(::std::string* head);

  // required string birthday = 6;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 6;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // required string email = 7;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 7;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string token = 8;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 8;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required uint32 sex = 9;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 9;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // required string phone = 10;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 10;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // required string converstionid = 11;
  bool has_converstionid() const;
  void clear_converstionid();
  static const int kConverstionidFieldNumber = 11;
  const ::std::string& converstionid() const;
  void set_converstionid(const ::std::string& value);
  void set_converstionid(const char* value);
  void set_converstionid(const char* value, size_t size);
  ::std::string* mutable_converstionid();
  ::std::string* release_converstionid();
  void set_allocated_converstionid(::std::string* converstionid);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.UserInfoAB)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_typeoption();
  inline void clear_has_typeoption();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_converstionid();
  inline void clear_has_converstionid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr head_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr converstionid_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 typeoption_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 sex_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserInfoAB> UserInfoAB_default_instance_;

// -------------------------------------------------------------------

class SendMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.SendMsgReq) */ {
 public:
  SendMsgReq();
  virtual ~SendMsgReq();

  SendMsgReq(const SendMsgReq& from);

  inline SendMsgReq& operator=(const SendMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgReq& default_instance();

  static const SendMsgReq* internal_default_instance();

  void Swap(SendMsgReq* other);

  // implements Message ----------------------------------------------

  inline SendMsgReq* New() const { return New(NULL); }

  SendMsgReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMsgReq& from);
  void MergeFrom(const SendMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMsgReq* other);
  void UnsafeMergeFrom(const SendMsgReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string access_token = 1;
  bool has_access_token() const;
  void clear_access_token();
  static const int kAccessTokenFieldNumber = 1;
  const ::std::string& access_token() const;
  void set_access_token(const ::std::string& value);
  void set_access_token(const char* value);
  void set_access_token(const char* value, size_t size);
  ::std::string* mutable_access_token();
  ::std::string* release_access_token();
  void set_allocated_access_token(::std::string* access_token);

  // required string userfrom = 2;
  bool has_userfrom() const;
  void clear_userfrom();
  static const int kUserfromFieldNumber = 2;
  const ::std::string& userfrom() const;
  void set_userfrom(const ::std::string& value);
  void set_userfrom(const char* value);
  void set_userfrom(const char* value, size_t size);
  ::std::string* mutable_userfrom();
  ::std::string* release_userfrom();
  void set_allocated_userfrom(::std::string* userfrom);

  // required string userTo = 3;
  bool has_userto() const;
  void clear_userto();
  static const int kUserToFieldNumber = 3;
  const ::std::string& userto() const;
  void set_userto(const ::std::string& value);
  void set_userto(const char* value);
  void set_userto(const char* value, size_t size);
  ::std::string* mutable_userto();
  ::std::string* release_userto();
  void set_allocated_userto(::std::string* userto);

  // required string text = 4;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 4;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required int32 msgtype = 5;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 5;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // required string headimage = 6;
  bool has_headimage() const;
  void clear_headimage();
  static const int kHeadimageFieldNumber = 6;
  const ::std::string& headimage() const;
  void set_headimage(const ::std::string& value);
  void set_headimage(const char* value);
  void set_headimage(const char* value, size_t size);
  ::std::string* mutable_headimage();
  ::std::string* release_headimage();
  void set_allocated_headimage(::std::string* headimage);

  // required string sendname = 7;
  bool has_sendname() const;
  void clear_sendname();
  static const int kSendnameFieldNumber = 7;
  const ::std::string& sendname() const;
  void set_sendname(const ::std::string& value);
  void set_sendname(const char* value);
  void set_sendname(const char* value, size_t size);
  ::std::string* mutable_sendname();
  ::std::string* release_sendname();
  void set_allocated_sendname(::std::string* sendname);

  // required string senduserid = 8;
  bool has_senduserid() const;
  void clear_senduserid();
  static const int kSenduseridFieldNumber = 8;
  const ::std::string& senduserid() const;
  void set_senduserid(const ::std::string& value);
  void set_senduserid(const char* value);
  void set_senduserid(const char* value, size_t size);
  ::std::string* mutable_senduserid();
  ::std::string* release_senduserid();
  void set_allocated_senduserid(::std::string* senduserid);

  // required string converstionid = 9;
  bool has_converstionid() const;
  void clear_converstionid();
  static const int kConverstionidFieldNumber = 9;
  const ::std::string& converstionid() const;
  void set_converstionid(const ::std::string& value);
  void set_converstionid(const char* value);
  void set_converstionid(const char* value, size_t size);
  ::std::string* mutable_converstionid();
  ::std::string* release_converstionid();
  void set_allocated_converstionid(::std::string* converstionid);

  // required int32 sendtype = 10;
  bool has_sendtype() const;
  void clear_sendtype();
  static const int kSendtypeFieldNumber = 10;
  ::google::protobuf::int32 sendtype() const;
  void set_sendtype(::google::protobuf::int32 value);

  // required int64 msguniqueid = 11;
  bool has_msguniqueid() const;
  void clear_msguniqueid();
  static const int kMsguniqueidFieldNumber = 11;
  ::google::protobuf::int64 msguniqueid() const;
  void set_msguniqueid(::google::protobuf::int64 value);

  // required int32 len = 12;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 12;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // required int32 width = 13;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 13;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.SendMsgReq)
 private:
  inline void set_has_access_token();
  inline void clear_has_access_token();
  inline void set_has_userfrom();
  inline void clear_has_userfrom();
  inline void set_has_userto();
  inline void clear_has_userto();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_headimage();
  inline void clear_has_headimage();
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_senduserid();
  inline void clear_has_senduserid();
  inline void set_has_converstionid();
  inline void clear_has_converstionid();
  inline void set_has_sendtype();
  inline void clear_has_sendtype();
  inline void set_has_msguniqueid();
  inline void clear_has_msguniqueid();
  inline void set_has_len();
  inline void clear_has_len();
  inline void set_has_width();
  inline void clear_has_width();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr access_token_;
  ::google::protobuf::internal::ArenaStringPtr userfrom_;
  ::google::protobuf::internal::ArenaStringPtr userto_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr headimage_;
  ::google::protobuf::internal::ArenaStringPtr sendname_;
  ::google::protobuf::internal::ArenaStringPtr senduserid_;
  ::google::protobuf::internal::ArenaStringPtr converstionid_;
  ::google::protobuf::int32 msgtype_;
  ::google::protobuf::int32 sendtype_;
  ::google::protobuf::int64 msguniqueid_;
  ::google::protobuf::int32 len_;
  ::google::protobuf::int32 width_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendMsgReq> SendMsgReq_default_instance_;

// -------------------------------------------------------------------

class SendMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.SendMsgRsp) */ {
 public:
  SendMsgRsp();
  virtual ~SendMsgRsp();

  SendMsgRsp(const SendMsgRsp& from);

  inline SendMsgRsp& operator=(const SendMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgRsp& default_instance();

  static const SendMsgRsp* internal_default_instance();

  void Swap(SendMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SendMsgRsp* New() const { return New(NULL); }

  SendMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMsgRsp& from);
  void MergeFrom(const SendMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMsgRsp* other);
  void UnsafeMergeFrom(const SendMsgRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_code = 1;
  bool has_err_code() const;
  void clear_err_code();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::int32 err_code() const;
  void set_err_code(::google::protobuf::int32 value);

  // required int32 errmsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  ::google::protobuf::int32 errmsg() const;
  void set_errmsg(::google::protobuf::int32 value);

  // required string msgid = 3;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgidFieldNumber = 3;
  const ::std::string& msgid() const;
  void set_msgid(const ::std::string& value);
  void set_msgid(const char* value);
  void set_msgid(const char* value, size_t size);
  ::std::string* mutable_msgid();
  ::std::string* release_msgid();
  void set_allocated_msgid(::std::string* msgid);

  // required string access_token = 4;
  bool has_access_token() const;
  void clear_access_token();
  static const int kAccessTokenFieldNumber = 4;
  const ::std::string& access_token() const;
  void set_access_token(const ::std::string& value);
  void set_access_token(const char* value);
  void set_access_token(const char* value, size_t size);
  ::std::string* mutable_access_token();
  ::std::string* release_access_token();
  void set_allocated_access_token(::std::string* access_token);

  // required string converstionid = 5;
  bool has_converstionid() const;
  void clear_converstionid();
  static const int kConverstionidFieldNumber = 5;
  const ::std::string& converstionid() const;
  void set_converstionid(const ::std::string& value);
  void set_converstionid(const char* value);
  void set_converstionid(const char* value, size_t size);
  ::std::string* mutable_converstionid();
  ::std::string* release_converstionid();
  void set_allocated_converstionid(::std::string* converstionid);

  // required int64 msguniqueid = 6;
  bool has_msguniqueid() const;
  void clear_msguniqueid();
  static const int kMsguniqueidFieldNumber = 6;
  ::google::protobuf::int64 msguniqueid() const;
  void set_msguniqueid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.SendMsgRsp)
 private:
  inline void set_has_err_code();
  inline void clear_has_err_code();
  inline void set_has_errmsg();
  inline void clear_has_errmsg();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_access_token();
  inline void clear_has_access_token();
  inline void set_has_converstionid();
  inline void clear_has_converstionid();
  inline void set_has_msguniqueid();
  inline void clear_has_msguniqueid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msgid_;
  ::google::protobuf::internal::ArenaStringPtr access_token_;
  ::google::protobuf::internal::ArenaStringPtr converstionid_;
  ::google::protobuf::int32 err_code_;
  ::google::protobuf::int32 errmsg_;
  ::google::protobuf::int64 msguniqueid_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendMsgRsp> SendMsgRsp_default_instance_;

// -------------------------------------------------------------------

class PushRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.PushRsp) */ {
 public:
  PushRsp();
  virtual ~PushRsp();

  PushRsp(const PushRsp& from);

  inline PushRsp& operator=(const PushRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushRsp& default_instance();

  static const PushRsp* internal_default_instance();

  void Swap(PushRsp* other);

  // implements Message ----------------------------------------------

  inline PushRsp* New() const { return New(NULL); }

  PushRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushRsp& from);
  void MergeFrom(const PushRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushRsp* other);
  void UnsafeMergeFrom(const PushRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 msgpushtype = 1;
  bool has_msgpushtype() const;
  void clear_msgpushtype();
  static const int kMsgpushtypeFieldNumber = 1;
  ::google::protobuf::int32 msgpushtype() const;
  void set_msgpushtype(::google::protobuf::int32 value);

  // required int32 errmsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 2;
  ::google::protobuf::int32 errmsg() const;
  void set_errmsg(::google::protobuf::int32 value);

  // required int32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // required string accesstoken = 4;
  bool has_accesstoken() const;
  void clear_accesstoken();
  static const int kAccesstokenFieldNumber = 4;
  const ::std::string& accesstoken() const;
  void set_accesstoken(const ::std::string& value);
  void set_accesstoken(const char* value);
  void set_accesstoken(const char* value, size_t size);
  ::std::string* mutable_accesstoken();
  ::std::string* release_accesstoken();
  void set_allocated_accesstoken(::std::string* accesstoken);

  // required string userfrom = 5;
  bool has_userfrom() const;
  void clear_userfrom();
  static const int kUserfromFieldNumber = 5;
  const ::std::string& userfrom() const;
  void set_userfrom(const ::std::string& value);
  void set_userfrom(const char* value);
  void set_userfrom(const char* value, size_t size);
  ::std::string* mutable_userfrom();
  ::std::string* release_userfrom();
  void set_allocated_userfrom(::std::string* userfrom);

  // required string userto = 6;
  bool has_userto() const;
  void clear_userto();
  static const int kUsertoFieldNumber = 6;
  const ::std::string& userto() const;
  void set_userto(const ::std::string& value);
  void set_userto(const char* value);
  void set_userto(const char* value, size_t size);
  ::std::string* mutable_userto();
  ::std::string* release_userto();
  void set_allocated_userto(::std::string* userto);

  // required string text = 7;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 7;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required string headimage = 8;
  bool has_headimage() const;
  void clear_headimage();
  static const int kHeadimageFieldNumber = 8;
  const ::std::string& headimage() const;
  void set_headimage(const ::std::string& value);
  void set_headimage(const char* value);
  void set_headimage(const char* value, size_t size);
  ::std::string* mutable_headimage();
  ::std::string* release_headimage();
  void set_allocated_headimage(::std::string* headimage);

  // required string sendname = 9;
  bool has_sendname() const;
  void clear_sendname();
  static const int kSendnameFieldNumber = 9;
  const ::std::string& sendname() const;
  void set_sendname(const ::std::string& value);
  void set_sendname(const char* value);
  void set_sendname(const char* value, size_t size);
  ::std::string* mutable_sendname();
  ::std::string* release_sendname();
  void set_allocated_sendname(::std::string* sendname);

  // required string senduserid = 10;
  bool has_senduserid() const;
  void clear_senduserid();
  static const int kSenduseridFieldNumber = 10;
  const ::std::string& senduserid() const;
  void set_senduserid(const ::std::string& value);
  void set_senduserid(const char* value);
  void set_senduserid(const char* value, size_t size);
  ::std::string* mutable_senduserid();
  ::std::string* release_senduserid();
  void set_allocated_senduserid(::std::string* senduserid);

  // required string converstionid = 11;
  bool has_converstionid() const;
  void clear_converstionid();
  static const int kConverstionidFieldNumber = 11;
  const ::std::string& converstionid() const;
  void set_converstionid(const ::std::string& value);
  void set_converstionid(const char* value);
  void set_converstionid(const char* value, size_t size);
  ::std::string* mutable_converstionid();
  ::std::string* release_converstionid();
  void set_allocated_converstionid(::std::string* converstionid);

  // required int32 sendtype = 12;
  bool has_sendtype() const;
  void clear_sendtype();
  static const int kSendtypeFieldNumber = 12;
  ::google::protobuf::int32 sendtype() const;
  void set_sendtype(::google::protobuf::int32 value);

  // required int32 msgtype = 13;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 13;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // required string msgid = 14;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgidFieldNumber = 14;
  const ::std::string& msgid() const;
  void set_msgid(const ::std::string& value);
  void set_msgid(const char* value);
  void set_msgid(const char* value, size_t size);
  ::std::string* mutable_msgid();
  ::std::string* release_msgid();
  void set_allocated_msgid(::std::string* msgid);

  // required int32 len = 15;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 15;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // required int32 width = 16;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 16;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.PushRsp)
 private:
  inline void set_has_msgpushtype();
  inline void clear_has_msgpushtype();
  inline void set_has_errmsg();
  inline void clear_has_errmsg();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_accesstoken();
  inline void clear_has_accesstoken();
  inline void set_has_userfrom();
  inline void clear_has_userfrom();
  inline void set_has_userto();
  inline void clear_has_userto();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_headimage();
  inline void clear_has_headimage();
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_senduserid();
  inline void clear_has_senduserid();
  inline void set_has_converstionid();
  inline void clear_has_converstionid();
  inline void set_has_sendtype();
  inline void clear_has_sendtype();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_len();
  inline void clear_has_len();
  inline void set_has_width();
  inline void clear_has_width();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accesstoken_;
  ::google::protobuf::internal::ArenaStringPtr userfrom_;
  ::google::protobuf::internal::ArenaStringPtr userto_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr headimage_;
  ::google::protobuf::internal::ArenaStringPtr sendname_;
  ::google::protobuf::internal::ArenaStringPtr senduserid_;
  ::google::protobuf::internal::ArenaStringPtr converstionid_;
  ::google::protobuf::internal::ArenaStringPtr msgid_;
  ::google::protobuf::int32 msgpushtype_;
  ::google::protobuf::int32 errmsg_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 sendtype_;
  ::google::protobuf::int32 msgtype_;
  ::google::protobuf::int32 len_;
  ::google::protobuf::int32 width_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PushRsp> PushRsp_default_instance_;

// -------------------------------------------------------------------

class MsgOffline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsMsgChat.MsgOffline) */ {
 public:
  MsgOffline();
  virtual ~MsgOffline();

  MsgOffline(const MsgOffline& from);

  inline MsgOffline& operator=(const MsgOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgOffline& default_instance();

  static const MsgOffline* internal_default_instance();

  void Swap(MsgOffline* other);

  // implements Message ----------------------------------------------

  inline MsgOffline* New() const { return New(NULL); }

  MsgOffline* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgOffline& from);
  void MergeFrom(const MsgOffline& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MsgOffline* other);
  void UnsafeMergeFrom(const MsgOffline& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 userfrom = 1;
  bool has_userfrom() const;
  void clear_userfrom();
  static const int kUserfromFieldNumber = 1;
  ::google::protobuf::int32 userfrom() const;
  void set_userfrom(::google::protobuf::int32 value);

  // required int32 userto = 2;
  bool has_userto() const;
  void clear_userto();
  static const int kUsertoFieldNumber = 2;
  ::google::protobuf::int32 userto() const;
  void set_userto(::google::protobuf::int32 value);

  // required int32 sendtype = 3;
  bool has_sendtype() const;
  void clear_sendtype();
  static const int kSendtypeFieldNumber = 3;
  ::google::protobuf::int32 sendtype() const;
  void set_sendtype(::google::protobuf::int32 value);

  // required int32 msgtype = 4;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 4;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // required string converstionid = 5;
  bool has_converstionid() const;
  void clear_converstionid();
  static const int kConverstionidFieldNumber = 5;
  const ::std::string& converstionid() const;
  void set_converstionid(const ::std::string& value);
  void set_converstionid(const char* value);
  void set_converstionid(const char* value, size_t size);
  ::std::string* mutable_converstionid();
  ::std::string* release_converstionid();
  void set_allocated_converstionid(::std::string* converstionid);

  // @@protoc_insertion_point(class_scope:MarsMsgChat.MsgOffline)
 private:
  inline void set_has_userfrom();
  inline void clear_has_userfrom();
  inline void set_has_userto();
  inline void clear_has_userto();
  inline void set_has_sendtype();
  inline void clear_has_sendtype();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_converstionid();
  inline void clear_has_converstionid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr converstionid_;
  ::google::protobuf::int32 userfrom_;
  ::google::protobuf::int32 userto_;
  ::google::protobuf::int32 sendtype_;
  ::google::protobuf::int32 msgtype_;
  friend void  protobuf_InitDefaults_chat_2eproto_impl();
  friend void  protobuf_AddDesc_chat_2eproto_impl();
  friend void protobuf_AssignDesc_chat_2eproto();
  friend void protobuf_ShutdownFile_chat_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MsgOffline> MsgOffline_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequst

// required string userName = 1;
inline bool LoginRequst::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequst::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequst::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequst::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginRequst::username() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.LoginRequst.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.LoginRequst.userName)
}
inline void LoginRequst::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.LoginRequst.userName)
}
inline void LoginRequst::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.LoginRequst.userName)
}
inline ::std::string* LoginRequst::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.LoginRequst.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_username() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.LoginRequst.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.LoginRequst.userName)
}

// required int32 userID = 2;
inline bool LoginRequst::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequst::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequst::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequst::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 LoginRequst::userid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.LoginRequst.userID)
  return userid_;
}
inline void LoginRequst::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.LoginRequst.userID)
}

inline const LoginRequst* LoginRequst::internal_default_instance() {
  return &LoginRequst_default_instance_.get();
}
// -------------------------------------------------------------------

// LogoutRequst

// required int32 userID = 1;
inline bool LogoutRequst::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutRequst::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutRequst::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutRequst::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 LogoutRequst::userid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.LogoutRequst.userID)
  return userid_;
}
inline void LogoutRequst::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.LogoutRequst.userID)
}

inline const LogoutRequst* LogoutRequst::internal_default_instance() {
  return &LogoutRequst_default_instance_.get();
}
// -------------------------------------------------------------------

// ContactAdd

// required uint32 msgtype = 1;
inline bool ContactAdd::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactAdd::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactAdd::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactAdd::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
inline ::google::protobuf::uint32 ContactAdd::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.ContactAdd.msgtype)
  return msgtype_;
}
inline void ContactAdd::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.ContactAdd.msgtype)
}

// required uint32 optiontype = 2;
inline bool ContactAdd::has_optiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactAdd::set_has_optiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactAdd::clear_has_optiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactAdd::clear_optiontype() {
  optiontype_ = 0u;
  clear_has_optiontype();
}
inline ::google::protobuf::uint32 ContactAdd::optiontype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.ContactAdd.optiontype)
  return optiontype_;
}
inline void ContactAdd::set_optiontype(::google::protobuf::uint32 value) {
  set_has_optiontype();
  optiontype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.ContactAdd.optiontype)
}

// required uint32 useridA = 3;
inline bool ContactAdd::has_userida() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContactAdd::set_has_userida() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContactAdd::clear_has_userida() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContactAdd::clear_userida() {
  userida_ = 0u;
  clear_has_userida();
}
inline ::google::protobuf::uint32 ContactAdd::userida() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.ContactAdd.useridA)
  return userida_;
}
inline void ContactAdd::set_userida(::google::protobuf::uint32 value) {
  set_has_userida();
  userida_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.ContactAdd.useridA)
}

// required uint32 useridB = 4;
inline bool ContactAdd::has_useridb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ContactAdd::set_has_useridb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ContactAdd::clear_has_useridb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ContactAdd::clear_useridb() {
  useridb_ = 0u;
  clear_has_useridb();
}
inline ::google::protobuf::uint32 ContactAdd::useridb() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.ContactAdd.useridB)
  return useridb_;
}
inline void ContactAdd::set_useridb(::google::protobuf::uint32 value) {
  set_has_useridb();
  useridb_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.ContactAdd.useridB)
}

inline const ContactAdd* ContactAdd::internal_default_instance() {
  return &ContactAdd_default_instance_.get();
}
// -------------------------------------------------------------------

// UserInfoAB

// required uint32 msgtype = 1;
inline bool UserInfoAB::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfoAB::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfoAB::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfoAB::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
inline ::google::protobuf::uint32 UserInfoAB::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.msgtype)
  return msgtype_;
}
inline void UserInfoAB::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.msgtype)
}

// required uint32 typeOption = 2;
inline bool UserInfoAB::has_typeoption() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfoAB::set_has_typeoption() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfoAB::clear_has_typeoption() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfoAB::clear_typeoption() {
  typeoption_ = 0u;
  clear_has_typeoption();
}
inline ::google::protobuf::uint32 UserInfoAB::typeoption() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.typeOption)
  return typeoption_;
}
inline void UserInfoAB::set_typeoption(::google::protobuf::uint32 value) {
  set_has_typeoption();
  typeoption_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.typeOption)
}

// required uint32 userId = 3;
inline bool UserInfoAB::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfoAB::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfoAB::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfoAB::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 UserInfoAB::userid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.userId)
  return userid_;
}
inline void UserInfoAB::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.userId)
}

// required string name = 4;
inline bool UserInfoAB::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserInfoAB::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserInfoAB::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserInfoAB::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& UserInfoAB::name() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.name)
}
inline void UserInfoAB::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.name)
}
inline void UserInfoAB::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.name)
}
inline ::std::string* UserInfoAB::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_name() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.name)
}

// required string head = 5;
inline bool UserInfoAB::has_head() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserInfoAB::set_has_head() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserInfoAB::clear_has_head() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserInfoAB::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_head();
}
inline const ::std::string& UserInfoAB::head() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_head(const ::std::string& value) {
  set_has_head();
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.head)
}
inline void UserInfoAB::set_head(const char* value) {
  set_has_head();
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.head)
}
inline void UserInfoAB::set_head(const char* value, size_t size) {
  set_has_head();
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.head)
}
inline ::std::string* UserInfoAB::mutable_head() {
  set_has_head();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_head() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.head)
  clear_has_head();
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    set_has_head();
  } else {
    clear_has_head();
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.head)
}

// required string birthday = 6;
inline bool UserInfoAB::has_birthday() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserInfoAB::set_has_birthday() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserInfoAB::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserInfoAB::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_birthday();
}
inline const ::std::string& UserInfoAB::birthday() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.birthday)
  return birthday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_birthday(const ::std::string& value) {
  set_has_birthday();
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.birthday)
}
inline void UserInfoAB::set_birthday(const char* value) {
  set_has_birthday();
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.birthday)
}
inline void UserInfoAB::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.birthday)
}
inline ::std::string* UserInfoAB::mutable_birthday() {
  set_has_birthday();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_birthday() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.birthday)
  clear_has_birthday();
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    set_has_birthday();
  } else {
    clear_has_birthday();
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.birthday)
}

// required string email = 7;
inline bool UserInfoAB::has_email() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserInfoAB::set_has_email() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserInfoAB::clear_has_email() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserInfoAB::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& UserInfoAB::email() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.email)
}
inline void UserInfoAB::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.email)
}
inline void UserInfoAB::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.email)
}
inline ::std::string* UserInfoAB::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_email() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.email)
}

// required string token = 8;
inline bool UserInfoAB::has_token() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserInfoAB::set_has_token() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserInfoAB::clear_has_token() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserInfoAB::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& UserInfoAB::token() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.token)
}
inline void UserInfoAB::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.token)
}
inline void UserInfoAB::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.token)
}
inline ::std::string* UserInfoAB::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_token() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.token)
}

// required uint32 sex = 9;
inline bool UserInfoAB::has_sex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserInfoAB::set_has_sex() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserInfoAB::clear_has_sex() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserInfoAB::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 UserInfoAB::sex() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.sex)
  return sex_;
}
inline void UserInfoAB::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.sex)
}

// required string phone = 10;
inline bool UserInfoAB::has_phone() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserInfoAB::set_has_phone() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserInfoAB::clear_has_phone() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserInfoAB::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& UserInfoAB::phone() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.phone)
}
inline void UserInfoAB::set_phone(const char* value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.phone)
}
inline void UserInfoAB::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.phone)
}
inline ::std::string* UserInfoAB::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_phone() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.phone)
}

// required string converstionid = 11;
inline bool UserInfoAB::has_converstionid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserInfoAB::set_has_converstionid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserInfoAB::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserInfoAB::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
inline const ::std::string& UserInfoAB::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.UserInfoAB.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.UserInfoAB.converstionid)
}
inline void UserInfoAB::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.UserInfoAB.converstionid)
}
inline void UserInfoAB::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.UserInfoAB.converstionid)
}
inline ::std::string* UserInfoAB::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.UserInfoAB.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.UserInfoAB.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.UserInfoAB.converstionid)
}

inline const UserInfoAB* UserInfoAB::internal_default_instance() {
  return &UserInfoAB_default_instance_.get();
}
// -------------------------------------------------------------------

// SendMsgReq

// required string access_token = 1;
inline bool SendMsgReq::has_access_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsgReq::set_has_access_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsgReq::clear_has_access_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsgReq::clear_access_token() {
  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_access_token();
}
inline const ::std::string& SendMsgReq::access_token() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.access_token)
  return access_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_access_token(const ::std::string& value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.access_token)
}
inline void SendMsgReq::set_access_token(const char* value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.access_token)
}
inline void SendMsgReq::set_access_token(const char* value, size_t size) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.access_token)
}
inline ::std::string* SendMsgReq::mutable_access_token() {
  set_has_access_token();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.access_token)
  return access_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_access_token() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.access_token)
  clear_has_access_token();
  return access_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    set_has_access_token();
  } else {
    clear_has_access_token();
  }
  access_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.access_token)
}

// required string userfrom = 2;
inline bool SendMsgReq::has_userfrom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMsgReq::set_has_userfrom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMsgReq::clear_has_userfrom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMsgReq::clear_userfrom() {
  userfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userfrom();
}
inline const ::std::string& SendMsgReq::userfrom() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.userfrom)
  return userfrom_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_userfrom(const ::std::string& value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.userfrom)
}
inline void SendMsgReq::set_userfrom(const char* value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.userfrom)
}
inline void SendMsgReq::set_userfrom(const char* value, size_t size) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.userfrom)
}
inline ::std::string* SendMsgReq::mutable_userfrom() {
  set_has_userfrom();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.userfrom)
  return userfrom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_userfrom() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.userfrom)
  clear_has_userfrom();
  return userfrom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_userfrom(::std::string* userfrom) {
  if (userfrom != NULL) {
    set_has_userfrom();
  } else {
    clear_has_userfrom();
  }
  userfrom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userfrom);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.userfrom)
}

// required string userTo = 3;
inline bool SendMsgReq::has_userto() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMsgReq::set_has_userto() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMsgReq::clear_has_userto() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMsgReq::clear_userto() {
  userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userto();
}
inline const ::std::string& SendMsgReq::userto() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.userTo)
  return userto_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_userto(const ::std::string& value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.userTo)
}
inline void SendMsgReq::set_userto(const char* value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.userTo)
}
inline void SendMsgReq::set_userto(const char* value, size_t size) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.userTo)
}
inline ::std::string* SendMsgReq::mutable_userto() {
  set_has_userto();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.userTo)
  return userto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_userto() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.userTo)
  clear_has_userto();
  return userto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_userto(::std::string* userto) {
  if (userto != NULL) {
    set_has_userto();
  } else {
    clear_has_userto();
  }
  userto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userto);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.userTo)
}

// required string text = 4;
inline bool SendMsgReq::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendMsgReq::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendMsgReq::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendMsgReq::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& SendMsgReq::text() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.text)
}
inline void SendMsgReq::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.text)
}
inline void SendMsgReq::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.text)
}
inline ::std::string* SendMsgReq::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_text() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.text)
}

// required int32 msgtype = 5;
inline bool SendMsgReq::has_msgtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendMsgReq::set_has_msgtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendMsgReq::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendMsgReq::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::google::protobuf::int32 SendMsgReq::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.msgtype)
  return msgtype_;
}
inline void SendMsgReq::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.msgtype)
}

// required string headimage = 6;
inline bool SendMsgReq::has_headimage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendMsgReq::set_has_headimage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendMsgReq::clear_has_headimage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendMsgReq::clear_headimage() {
  headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimage();
}
inline const ::std::string& SendMsgReq::headimage() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.headimage)
  return headimage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_headimage(const ::std::string& value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.headimage)
}
inline void SendMsgReq::set_headimage(const char* value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.headimage)
}
inline void SendMsgReq::set_headimage(const char* value, size_t size) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.headimage)
}
inline ::std::string* SendMsgReq::mutable_headimage() {
  set_has_headimage();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.headimage)
  return headimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_headimage() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.headimage)
  clear_has_headimage();
  return headimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_headimage(::std::string* headimage) {
  if (headimage != NULL) {
    set_has_headimage();
  } else {
    clear_has_headimage();
  }
  headimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimage);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.headimage)
}

// required string sendname = 7;
inline bool SendMsgReq::has_sendname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendMsgReq::set_has_sendname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendMsgReq::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendMsgReq::clear_sendname() {
  sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendname();
}
inline const ::std::string& SendMsgReq::sendname() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.sendname)
  return sendname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_sendname(const ::std::string& value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.sendname)
}
inline void SendMsgReq::set_sendname(const char* value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.sendname)
}
inline void SendMsgReq::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.sendname)
}
inline ::std::string* SendMsgReq::mutable_sendname() {
  set_has_sendname();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.sendname)
  return sendname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_sendname() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.sendname)
  clear_has_sendname();
  return sendname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_sendname(::std::string* sendname) {
  if (sendname != NULL) {
    set_has_sendname();
  } else {
    clear_has_sendname();
  }
  sendname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendname);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.sendname)
}

// required string senduserid = 8;
inline bool SendMsgReq::has_senduserid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendMsgReq::set_has_senduserid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendMsgReq::clear_has_senduserid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendMsgReq::clear_senduserid() {
  senduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senduserid();
}
inline const ::std::string& SendMsgReq::senduserid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.senduserid)
  return senduserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_senduserid(const ::std::string& value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.senduserid)
}
inline void SendMsgReq::set_senduserid(const char* value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.senduserid)
}
inline void SendMsgReq::set_senduserid(const char* value, size_t size) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.senduserid)
}
inline ::std::string* SendMsgReq::mutable_senduserid() {
  set_has_senduserid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.senduserid)
  return senduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_senduserid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.senduserid)
  clear_has_senduserid();
  return senduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_senduserid(::std::string* senduserid) {
  if (senduserid != NULL) {
    set_has_senduserid();
  } else {
    clear_has_senduserid();
  }
  senduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senduserid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.senduserid)
}

// required string converstionid = 9;
inline bool SendMsgReq::has_converstionid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SendMsgReq::set_has_converstionid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SendMsgReq::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SendMsgReq::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
inline const ::std::string& SendMsgReq::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.converstionid)
}
inline void SendMsgReq::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.converstionid)
}
inline void SendMsgReq::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.converstionid)
}
inline ::std::string* SendMsgReq::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.converstionid)
}

// required int32 sendtype = 10;
inline bool SendMsgReq::has_sendtype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SendMsgReq::set_has_sendtype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SendMsgReq::clear_has_sendtype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SendMsgReq::clear_sendtype() {
  sendtype_ = 0;
  clear_has_sendtype();
}
inline ::google::protobuf::int32 SendMsgReq::sendtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.sendtype)
  return sendtype_;
}
inline void SendMsgReq::set_sendtype(::google::protobuf::int32 value) {
  set_has_sendtype();
  sendtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.sendtype)
}

// required int64 msguniqueid = 11;
inline bool SendMsgReq::has_msguniqueid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SendMsgReq::set_has_msguniqueid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SendMsgReq::clear_has_msguniqueid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SendMsgReq::clear_msguniqueid() {
  msguniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_msguniqueid();
}
inline ::google::protobuf::int64 SendMsgReq::msguniqueid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.msguniqueid)
  return msguniqueid_;
}
inline void SendMsgReq::set_msguniqueid(::google::protobuf::int64 value) {
  set_has_msguniqueid();
  msguniqueid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.msguniqueid)
}

// required int32 len = 12;
inline bool SendMsgReq::has_len() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SendMsgReq::set_has_len() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SendMsgReq::clear_has_len() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SendMsgReq::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 SendMsgReq::len() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.len)
  return len_;
}
inline void SendMsgReq::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.len)
}

// required int32 width = 13;
inline bool SendMsgReq::has_width() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SendMsgReq::set_has_width() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SendMsgReq::clear_has_width() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SendMsgReq::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 SendMsgReq::width() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.width)
  return width_;
}
inline void SendMsgReq::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.width)
}

inline const SendMsgReq* SendMsgReq::internal_default_instance() {
  return &SendMsgReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SendMsgRsp

// required int32 err_code = 1;
inline bool SendMsgRsp::has_err_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsgRsp::set_has_err_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsgRsp::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsgRsp::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
inline ::google::protobuf::int32 SendMsgRsp::err_code() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.err_code)
  return err_code_;
}
inline void SendMsgRsp::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.err_code)
}

// required int32 errmsg = 2;
inline bool SendMsgRsp::has_errmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMsgRsp::set_has_errmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMsgRsp::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMsgRsp::clear_errmsg() {
  errmsg_ = 0;
  clear_has_errmsg();
}
inline ::google::protobuf::int32 SendMsgRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.errmsg)
  return errmsg_;
}
inline void SendMsgRsp::set_errmsg(::google::protobuf::int32 value) {
  set_has_errmsg();
  errmsg_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.errmsg)
}

// required string msgid = 3;
inline bool SendMsgRsp::has_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMsgRsp::set_has_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMsgRsp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMsgRsp::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgid();
}
inline const ::std::string& SendMsgRsp::msgid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.msgid)
  return msgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_msgid(const ::std::string& value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.msgid)
}
inline void SendMsgRsp::set_msgid(const char* value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgRsp.msgid)
}
inline void SendMsgRsp::set_msgid(const char* value, size_t size) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgRsp.msgid)
}
inline ::std::string* SendMsgRsp::mutable_msgid() {
  set_has_msgid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgRsp.msgid)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgRsp::release_msgid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgRsp.msgid)
  clear_has_msgid();
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    set_has_msgid();
  } else {
    clear_has_msgid();
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgRsp.msgid)
}

// required string access_token = 4;
inline bool SendMsgRsp::has_access_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendMsgRsp::set_has_access_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendMsgRsp::clear_has_access_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendMsgRsp::clear_access_token() {
  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_access_token();
}
inline const ::std::string& SendMsgRsp::access_token() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.access_token)
  return access_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_access_token(const ::std::string& value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.access_token)
}
inline void SendMsgRsp::set_access_token(const char* value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgRsp.access_token)
}
inline void SendMsgRsp::set_access_token(const char* value, size_t size) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgRsp.access_token)
}
inline ::std::string* SendMsgRsp::mutable_access_token() {
  set_has_access_token();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgRsp.access_token)
  return access_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgRsp::release_access_token() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgRsp.access_token)
  clear_has_access_token();
  return access_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    set_has_access_token();
  } else {
    clear_has_access_token();
  }
  access_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgRsp.access_token)
}

// required string converstionid = 5;
inline bool SendMsgRsp::has_converstionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendMsgRsp::set_has_converstionid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendMsgRsp::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendMsgRsp::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
inline const ::std::string& SendMsgRsp::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.converstionid)
}
inline void SendMsgRsp::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgRsp.converstionid)
}
inline void SendMsgRsp::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgRsp.converstionid)
}
inline ::std::string* SendMsgRsp::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgRsp.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgRsp::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgRsp.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgRsp::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgRsp.converstionid)
}

// required int64 msguniqueid = 6;
inline bool SendMsgRsp::has_msguniqueid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendMsgRsp::set_has_msguniqueid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendMsgRsp::clear_has_msguniqueid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendMsgRsp::clear_msguniqueid() {
  msguniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_msguniqueid();
}
inline ::google::protobuf::int64 SendMsgRsp::msguniqueid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.msguniqueid)
  return msguniqueid_;
}
inline void SendMsgRsp::set_msguniqueid(::google::protobuf::int64 value) {
  set_has_msguniqueid();
  msguniqueid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.msguniqueid)
}

inline const SendMsgRsp* SendMsgRsp::internal_default_instance() {
  return &SendMsgRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// PushRsp

// required int32 msgpushtype = 1;
inline bool PushRsp::has_msgpushtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushRsp::set_has_msgpushtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushRsp::clear_has_msgpushtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushRsp::clear_msgpushtype() {
  msgpushtype_ = 0;
  clear_has_msgpushtype();
}
inline ::google::protobuf::int32 PushRsp::msgpushtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.msgpushtype)
  return msgpushtype_;
}
inline void PushRsp::set_msgpushtype(::google::protobuf::int32 value) {
  set_has_msgpushtype();
  msgpushtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.msgpushtype)
}

// required int32 errmsg = 2;
inline bool PushRsp::has_errmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushRsp::set_has_errmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushRsp::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushRsp::clear_errmsg() {
  errmsg_ = 0;
  clear_has_errmsg();
}
inline ::google::protobuf::int32 PushRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.errmsg)
  return errmsg_;
}
inline void PushRsp::set_errmsg(::google::protobuf::int32 value) {
  set_has_errmsg();
  errmsg_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.errmsg)
}

// required int32 state = 3;
inline bool PushRsp::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushRsp::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushRsp::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushRsp::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PushRsp::state() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.state)
  return state_;
}
inline void PushRsp::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.state)
}

// required string accesstoken = 4;
inline bool PushRsp::has_accesstoken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushRsp::set_has_accesstoken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushRsp::clear_has_accesstoken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushRsp::clear_accesstoken() {
  accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accesstoken();
}
inline const ::std::string& PushRsp::accesstoken() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.accesstoken)
  return accesstoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_accesstoken(const ::std::string& value) {
  set_has_accesstoken();
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.accesstoken)
}
inline void PushRsp::set_accesstoken(const char* value) {
  set_has_accesstoken();
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.accesstoken)
}
inline void PushRsp::set_accesstoken(const char* value, size_t size) {
  set_has_accesstoken();
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.accesstoken)
}
inline ::std::string* PushRsp::mutable_accesstoken() {
  set_has_accesstoken();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.accesstoken)
  return accesstoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_accesstoken() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.accesstoken)
  clear_has_accesstoken();
  return accesstoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_accesstoken(::std::string* accesstoken) {
  if (accesstoken != NULL) {
    set_has_accesstoken();
  } else {
    clear_has_accesstoken();
  }
  accesstoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesstoken);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.accesstoken)
}

// required string userfrom = 5;
inline bool PushRsp::has_userfrom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PushRsp::set_has_userfrom() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PushRsp::clear_has_userfrom() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PushRsp::clear_userfrom() {
  userfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userfrom();
}
inline const ::std::string& PushRsp::userfrom() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.userfrom)
  return userfrom_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_userfrom(const ::std::string& value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.userfrom)
}
inline void PushRsp::set_userfrom(const char* value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.userfrom)
}
inline void PushRsp::set_userfrom(const char* value, size_t size) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.userfrom)
}
inline ::std::string* PushRsp::mutable_userfrom() {
  set_has_userfrom();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.userfrom)
  return userfrom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_userfrom() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.userfrom)
  clear_has_userfrom();
  return userfrom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_userfrom(::std::string* userfrom) {
  if (userfrom != NULL) {
    set_has_userfrom();
  } else {
    clear_has_userfrom();
  }
  userfrom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userfrom);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.userfrom)
}

// required string userto = 6;
inline bool PushRsp::has_userto() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PushRsp::set_has_userto() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PushRsp::clear_has_userto() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PushRsp::clear_userto() {
  userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userto();
}
inline const ::std::string& PushRsp::userto() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.userto)
  return userto_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_userto(const ::std::string& value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.userto)
}
inline void PushRsp::set_userto(const char* value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.userto)
}
inline void PushRsp::set_userto(const char* value, size_t size) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.userto)
}
inline ::std::string* PushRsp::mutable_userto() {
  set_has_userto();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.userto)
  return userto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_userto() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.userto)
  clear_has_userto();
  return userto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_userto(::std::string* userto) {
  if (userto != NULL) {
    set_has_userto();
  } else {
    clear_has_userto();
  }
  userto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userto);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.userto)
}

// required string text = 7;
inline bool PushRsp::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PushRsp::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PushRsp::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PushRsp::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& PushRsp::text() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.text)
}
inline void PushRsp::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.text)
}
inline void PushRsp::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.text)
}
inline ::std::string* PushRsp::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_text() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.text)
}

// required string headimage = 8;
inline bool PushRsp::has_headimage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PushRsp::set_has_headimage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PushRsp::clear_has_headimage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PushRsp::clear_headimage() {
  headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimage();
}
inline const ::std::string& PushRsp::headimage() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.headimage)
  return headimage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_headimage(const ::std::string& value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.headimage)
}
inline void PushRsp::set_headimage(const char* value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.headimage)
}
inline void PushRsp::set_headimage(const char* value, size_t size) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.headimage)
}
inline ::std::string* PushRsp::mutable_headimage() {
  set_has_headimage();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.headimage)
  return headimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_headimage() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.headimage)
  clear_has_headimage();
  return headimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_headimage(::std::string* headimage) {
  if (headimage != NULL) {
    set_has_headimage();
  } else {
    clear_has_headimage();
  }
  headimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimage);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.headimage)
}

// required string sendname = 9;
inline bool PushRsp::has_sendname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PushRsp::set_has_sendname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PushRsp::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PushRsp::clear_sendname() {
  sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendname();
}
inline const ::std::string& PushRsp::sendname() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.sendname)
  return sendname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_sendname(const ::std::string& value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.sendname)
}
inline void PushRsp::set_sendname(const char* value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.sendname)
}
inline void PushRsp::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.sendname)
}
inline ::std::string* PushRsp::mutable_sendname() {
  set_has_sendname();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.sendname)
  return sendname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_sendname() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.sendname)
  clear_has_sendname();
  return sendname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_sendname(::std::string* sendname) {
  if (sendname != NULL) {
    set_has_sendname();
  } else {
    clear_has_sendname();
  }
  sendname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendname);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.sendname)
}

// required string senduserid = 10;
inline bool PushRsp::has_senduserid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PushRsp::set_has_senduserid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PushRsp::clear_has_senduserid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PushRsp::clear_senduserid() {
  senduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senduserid();
}
inline const ::std::string& PushRsp::senduserid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.senduserid)
  return senduserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_senduserid(const ::std::string& value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.senduserid)
}
inline void PushRsp::set_senduserid(const char* value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.senduserid)
}
inline void PushRsp::set_senduserid(const char* value, size_t size) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.senduserid)
}
inline ::std::string* PushRsp::mutable_senduserid() {
  set_has_senduserid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.senduserid)
  return senduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_senduserid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.senduserid)
  clear_has_senduserid();
  return senduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_senduserid(::std::string* senduserid) {
  if (senduserid != NULL) {
    set_has_senduserid();
  } else {
    clear_has_senduserid();
  }
  senduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senduserid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.senduserid)
}

// required string converstionid = 11;
inline bool PushRsp::has_converstionid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PushRsp::set_has_converstionid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PushRsp::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PushRsp::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
inline const ::std::string& PushRsp::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.converstionid)
}
inline void PushRsp::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.converstionid)
}
inline void PushRsp::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.converstionid)
}
inline ::std::string* PushRsp::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.converstionid)
}

// required int32 sendtype = 12;
inline bool PushRsp::has_sendtype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PushRsp::set_has_sendtype() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PushRsp::clear_has_sendtype() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PushRsp::clear_sendtype() {
  sendtype_ = 0;
  clear_has_sendtype();
}
inline ::google::protobuf::int32 PushRsp::sendtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.sendtype)
  return sendtype_;
}
inline void PushRsp::set_sendtype(::google::protobuf::int32 value) {
  set_has_sendtype();
  sendtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.sendtype)
}

// required int32 msgtype = 13;
inline bool PushRsp::has_msgtype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PushRsp::set_has_msgtype() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PushRsp::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PushRsp::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::google::protobuf::int32 PushRsp::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.msgtype)
  return msgtype_;
}
inline void PushRsp::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.msgtype)
}

// required string msgid = 14;
inline bool PushRsp::has_msgid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PushRsp::set_has_msgid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PushRsp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PushRsp::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgid();
}
inline const ::std::string& PushRsp::msgid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.msgid)
  return msgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_msgid(const ::std::string& value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.msgid)
}
inline void PushRsp::set_msgid(const char* value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.msgid)
}
inline void PushRsp::set_msgid(const char* value, size_t size) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.msgid)
}
inline ::std::string* PushRsp::mutable_msgid() {
  set_has_msgid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.msgid)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushRsp::release_msgid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.msgid)
  clear_has_msgid();
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushRsp::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    set_has_msgid();
  } else {
    clear_has_msgid();
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.msgid)
}

// required int32 len = 15;
inline bool PushRsp::has_len() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PushRsp::set_has_len() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PushRsp::clear_has_len() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PushRsp::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 PushRsp::len() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.len)
  return len_;
}
inline void PushRsp::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.len)
}

// required int32 width = 16;
inline bool PushRsp::has_width() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PushRsp::set_has_width() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PushRsp::clear_has_width() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PushRsp::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 PushRsp::width() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.width)
  return width_;
}
inline void PushRsp::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.width)
}

inline const PushRsp* PushRsp::internal_default_instance() {
  return &PushRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// MsgOffline

// required int32 userfrom = 1;
inline bool MsgOffline::has_userfrom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgOffline::set_has_userfrom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgOffline::clear_has_userfrom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgOffline::clear_userfrom() {
  userfrom_ = 0;
  clear_has_userfrom();
}
inline ::google::protobuf::int32 MsgOffline::userfrom() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.MsgOffline.userfrom)
  return userfrom_;
}
inline void MsgOffline::set_userfrom(::google::protobuf::int32 value) {
  set_has_userfrom();
  userfrom_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.MsgOffline.userfrom)
}

// required int32 userto = 2;
inline bool MsgOffline::has_userto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgOffline::set_has_userto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgOffline::clear_has_userto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgOffline::clear_userto() {
  userto_ = 0;
  clear_has_userto();
}
inline ::google::protobuf::int32 MsgOffline::userto() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.MsgOffline.userto)
  return userto_;
}
inline void MsgOffline::set_userto(::google::protobuf::int32 value) {
  set_has_userto();
  userto_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.MsgOffline.userto)
}

// required int32 sendtype = 3;
inline bool MsgOffline::has_sendtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgOffline::set_has_sendtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgOffline::clear_has_sendtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgOffline::clear_sendtype() {
  sendtype_ = 0;
  clear_has_sendtype();
}
inline ::google::protobuf::int32 MsgOffline::sendtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.MsgOffline.sendtype)
  return sendtype_;
}
inline void MsgOffline::set_sendtype(::google::protobuf::int32 value) {
  set_has_sendtype();
  sendtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.MsgOffline.sendtype)
}

// required int32 msgtype = 4;
inline bool MsgOffline::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgOffline::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgOffline::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgOffline::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::google::protobuf::int32 MsgOffline::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.MsgOffline.msgtype)
  return msgtype_;
}
inline void MsgOffline::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.MsgOffline.msgtype)
}

// required string converstionid = 5;
inline bool MsgOffline::has_converstionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgOffline::set_has_converstionid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgOffline::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgOffline::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
inline const ::std::string& MsgOffline::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.MsgOffline.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgOffline::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.MsgOffline.converstionid)
}
inline void MsgOffline::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.MsgOffline.converstionid)
}
inline void MsgOffline::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.MsgOffline.converstionid)
}
inline ::std::string* MsgOffline::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.MsgOffline.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgOffline::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.MsgOffline.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgOffline::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.MsgOffline.converstionid)
}

inline const MsgOffline* MsgOffline::internal_default_instance() {
  return &MsgOffline_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MarsMsgChat

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chat_2eproto__INCLUDED
