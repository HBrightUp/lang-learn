// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_login_2eproto__INCLUDED
#define PROTOBUF_login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MarsLogin {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_login_2eproto();
void protobuf_InitDefaults_login_2eproto();
void protobuf_AssignDesc_login_2eproto();
void protobuf_ShutdownFile_login_2eproto();

class LoginRequst;

// ===================================================================

class LoginRequst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsLogin.LoginRequst) */ {
 public:
  LoginRequst();
  virtual ~LoginRequst();

  LoginRequst(const LoginRequst& from);

  inline LoginRequst& operator=(const LoginRequst& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequst& default_instance();

  static const LoginRequst* internal_default_instance();

  void Swap(LoginRequst* other);

  // implements Message ----------------------------------------------

  inline LoginRequst* New() const { return New(NULL); }

  LoginRequst* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequst& from);
  void MergeFrom(const LoginRequst& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequst* other);
  void UnsafeMergeFrom(const LoginRequst& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 1;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional int32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional string email = 3;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string telPhone = 4;
  void clear_telphone();
  static const int kTelPhoneFieldNumber = 4;
  const ::std::string& telphone() const;
  void set_telphone(const ::std::string& value);
  void set_telphone(const char* value);
  void set_telphone(const char* value, size_t size);
  ::std::string* mutable_telphone();
  ::std::string* release_telphone();
  void set_allocated_telphone(::std::string* telphone);

  // optional string password = 5;
  void clear_password();
  static const int kPasswordFieldNumber = 5;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string imagePath = 6;
  void clear_imagepath();
  static const int kImagePathFieldNumber = 6;
  const ::std::string& imagepath() const;
  void set_imagepath(const ::std::string& value);
  void set_imagepath(const char* value);
  void set_imagepath(const char* value, size_t size);
  ::std::string* mutable_imagepath();
  ::std::string* release_imagepath();
  void set_allocated_imagepath(::std::string* imagepath);

  // optional string CustionJson = 7;
  void clear_custionjson();
  static const int kCustionJsonFieldNumber = 7;
  const ::std::string& custionjson() const;
  void set_custionjson(const ::std::string& value);
  void set_custionjson(const char* value);
  void set_custionjson(const char* value, size_t size);
  ::std::string* mutable_custionjson();
  ::std::string* release_custionjson();
  void set_allocated_custionjson(::std::string* custionjson);

  // @@protoc_insertion_point(class_scope:MarsLogin.LoginRequst)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr telphone_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr imagepath_;
  ::google::protobuf::internal::ArenaStringPtr custionjson_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_login_2eproto_impl();
  friend void  protobuf_AddDesc_login_2eproto_impl();
  friend void protobuf_AssignDesc_login_2eproto();
  friend void protobuf_ShutdownFile_login_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginRequst> LoginRequst_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequst

// optional string userName = 1;
inline void LoginRequst::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequst::username() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.userName)
}
inline void LoginRequst::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsLogin.LoginRequst.userName)
}
inline void LoginRequst::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsLogin.LoginRequst.userName)
}
inline ::std::string* LoginRequst::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:MarsLogin.LoginRequst.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_username() {
  // @@protoc_insertion_point(field_release:MarsLogin.LoginRequst.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:MarsLogin.LoginRequst.userName)
}

// optional int32 userID = 2;
inline void LoginRequst::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 LoginRequst::userid() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.userID)
  return userid_;
}
inline void LoginRequst::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.userID)
}

// optional string email = 3;
inline void LoginRequst::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequst::email() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.email)
}
inline void LoginRequst::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsLogin.LoginRequst.email)
}
inline void LoginRequst::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsLogin.LoginRequst.email)
}
inline ::std::string* LoginRequst::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:MarsLogin.LoginRequst.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_email() {
  // @@protoc_insertion_point(field_release:MarsLogin.LoginRequst.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:MarsLogin.LoginRequst.email)
}

// optional string telPhone = 4;
inline void LoginRequst::clear_telphone() {
  telphone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequst::telphone() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.telPhone)
  return telphone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_telphone(const ::std::string& value) {
  
  telphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.telPhone)
}
inline void LoginRequst::set_telphone(const char* value) {
  
  telphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsLogin.LoginRequst.telPhone)
}
inline void LoginRequst::set_telphone(const char* value, size_t size) {
  
  telphone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsLogin.LoginRequst.telPhone)
}
inline ::std::string* LoginRequst::mutable_telphone() {
  
  // @@protoc_insertion_point(field_mutable:MarsLogin.LoginRequst.telPhone)
  return telphone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_telphone() {
  // @@protoc_insertion_point(field_release:MarsLogin.LoginRequst.telPhone)
  
  return telphone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_telphone(::std::string* telphone) {
  if (telphone != NULL) {
    
  } else {
    
  }
  telphone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telphone);
  // @@protoc_insertion_point(field_set_allocated:MarsLogin.LoginRequst.telPhone)
}

// optional string password = 5;
inline void LoginRequst::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequst::password() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.password)
}
inline void LoginRequst::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsLogin.LoginRequst.password)
}
inline void LoginRequst::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsLogin.LoginRequst.password)
}
inline ::std::string* LoginRequst::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:MarsLogin.LoginRequst.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_password() {
  // @@protoc_insertion_point(field_release:MarsLogin.LoginRequst.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:MarsLogin.LoginRequst.password)
}

// optional string imagePath = 6;
inline void LoginRequst::clear_imagepath() {
  imagepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequst::imagepath() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.imagePath)
  return imagepath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_imagepath(const ::std::string& value) {
  
  imagepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.imagePath)
}
inline void LoginRequst::set_imagepath(const char* value) {
  
  imagepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsLogin.LoginRequst.imagePath)
}
inline void LoginRequst::set_imagepath(const char* value, size_t size) {
  
  imagepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsLogin.LoginRequst.imagePath)
}
inline ::std::string* LoginRequst::mutable_imagepath() {
  
  // @@protoc_insertion_point(field_mutable:MarsLogin.LoginRequst.imagePath)
  return imagepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_imagepath() {
  // @@protoc_insertion_point(field_release:MarsLogin.LoginRequst.imagePath)
  
  return imagepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_imagepath(::std::string* imagepath) {
  if (imagepath != NULL) {
    
  } else {
    
  }
  imagepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagepath);
  // @@protoc_insertion_point(field_set_allocated:MarsLogin.LoginRequst.imagePath)
}

// optional string CustionJson = 7;
inline void LoginRequst::clear_custionjson() {
  custionjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequst::custionjson() const {
  // @@protoc_insertion_point(field_get:MarsLogin.LoginRequst.CustionJson)
  return custionjson_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_custionjson(const ::std::string& value) {
  
  custionjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsLogin.LoginRequst.CustionJson)
}
inline void LoginRequst::set_custionjson(const char* value) {
  
  custionjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsLogin.LoginRequst.CustionJson)
}
inline void LoginRequst::set_custionjson(const char* value, size_t size) {
  
  custionjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsLogin.LoginRequst.CustionJson)
}
inline ::std::string* LoginRequst::mutable_custionjson() {
  
  // @@protoc_insertion_point(field_mutable:MarsLogin.LoginRequst.CustionJson)
  return custionjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequst::release_custionjson() {
  // @@protoc_insertion_point(field_release:MarsLogin.LoginRequst.CustionJson)
  
  return custionjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequst::set_allocated_custionjson(::std::string* custionjson) {
  if (custionjson != NULL) {
    
  } else {
    
  }
  custionjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custionjson);
  // @@protoc_insertion_point(field_set_allocated:MarsLogin.LoginRequst.CustionJson)
}

inline const LoginRequst* LoginRequst::internal_default_instance() {
  return &LoginRequst_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MarsLogin

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_2eproto__INCLUDED
