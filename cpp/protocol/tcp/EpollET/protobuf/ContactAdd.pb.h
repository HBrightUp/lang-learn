// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ContactAdd.proto

#ifndef PROTOBUF_ContactAdd_2eproto__INCLUDED
#define PROTOBUF_ContactAdd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MarsContactAdd {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ContactAdd_2eproto();
void protobuf_InitDefaults_ContactAdd_2eproto();
void protobuf_AssignDesc_ContactAdd_2eproto();
void protobuf_ShutdownFile_ContactAdd_2eproto();

class ContactAdd;
class UserInfoAB;

// ===================================================================

class ContactAdd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsContactAdd.ContactAdd) */ {
 public:
  ContactAdd();
  virtual ~ContactAdd();

  ContactAdd(const ContactAdd& from);

  inline ContactAdd& operator=(const ContactAdd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactAdd& default_instance();

  static const ContactAdd* internal_default_instance();

  void Swap(ContactAdd* other);

  // implements Message ----------------------------------------------

  inline ContactAdd* New() const { return New(NULL); }

  ContactAdd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContactAdd& from);
  void MergeFrom(const ContactAdd& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContactAdd* other);
  void UnsafeMergeFrom(const ContactAdd& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 msgtype = 1;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::google::protobuf::uint32 msgtype() const;
  void set_msgtype(::google::protobuf::uint32 value);

  // optional uint32 optiontype = 2;
  void clear_optiontype();
  static const int kOptiontypeFieldNumber = 2;
  ::google::protobuf::uint32 optiontype() const;
  void set_optiontype(::google::protobuf::uint32 value);

  // optional uint32 useridA = 3;
  void clear_userida();
  static const int kUseridAFieldNumber = 3;
  ::google::protobuf::uint32 userida() const;
  void set_userida(::google::protobuf::uint32 value);

  // optional uint32 useridB = 4;
  void clear_useridb();
  static const int kUseridBFieldNumber = 4;
  ::google::protobuf::uint32 useridb() const;
  void set_useridb(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MarsContactAdd.ContactAdd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 optiontype_;
  ::google::protobuf::uint32 userida_;
  ::google::protobuf::uint32 useridb_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ContactAdd_2eproto_impl();
  friend void  protobuf_AddDesc_ContactAdd_2eproto_impl();
  friend void protobuf_AssignDesc_ContactAdd_2eproto();
  friend void protobuf_ShutdownFile_ContactAdd_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ContactAdd> ContactAdd_default_instance_;

// -------------------------------------------------------------------

class UserInfoAB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MarsContactAdd.UserInfoAB) */ {
 public:
  UserInfoAB();
  virtual ~UserInfoAB();

  UserInfoAB(const UserInfoAB& from);

  inline UserInfoAB& operator=(const UserInfoAB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoAB& default_instance();

  static const UserInfoAB* internal_default_instance();

  void Swap(UserInfoAB* other);

  // implements Message ----------------------------------------------

  inline UserInfoAB* New() const { return New(NULL); }

  UserInfoAB* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfoAB& from);
  void MergeFrom(const UserInfoAB& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserInfoAB* other);
  void UnsafeMergeFrom(const UserInfoAB& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 msgtype = 1;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::google::protobuf::uint32 msgtype() const;
  void set_msgtype(::google::protobuf::uint32 value);

  // optional uint32 typeOption = 2;
  void clear_typeoption();
  static const int kTypeOptionFieldNumber = 2;
  ::google::protobuf::uint32 typeoption() const;
  void set_typeoption(::google::protobuf::uint32 value);

  // optional uint32 userId = 3;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string head = 5;
  void clear_head();
  static const int kHeadFieldNumber = 5;
  const ::std::string& head() const;
  void set_head(const ::std::string& value);
  void set_head(const char* value);
  void set_head(const char* value, size_t size);
  ::std::string* mutable_head();
  ::std::string* release_head();
  void set_allocated_head(::std::string* head);

  // optional string birthday = 6;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 6;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // optional string email = 7;
  void clear_email();
  static const int kEmailFieldNumber = 7;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string token = 8;
  void clear_token();
  static const int kTokenFieldNumber = 8;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional uint32 sex = 9;
  void clear_sex();
  static const int kSexFieldNumber = 9;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // optional string phone = 10;
  void clear_phone();
  static const int kPhoneFieldNumber = 10;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // @@protoc_insertion_point(class_scope:MarsContactAdd.UserInfoAB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr head_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 typeoption_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 sex_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ContactAdd_2eproto_impl();
  friend void  protobuf_AddDesc_ContactAdd_2eproto_impl();
  friend void protobuf_AssignDesc_ContactAdd_2eproto();
  friend void protobuf_ShutdownFile_ContactAdd_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserInfoAB> UserInfoAB_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ContactAdd

// optional uint32 msgtype = 1;
inline void ContactAdd::clear_msgtype() {
  msgtype_ = 0u;
}
inline ::google::protobuf::uint32 ContactAdd::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.msgtype)
  return msgtype_;
}
inline void ContactAdd::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.msgtype)
}

// optional uint32 optiontype = 2;
inline void ContactAdd::clear_optiontype() {
  optiontype_ = 0u;
}
inline ::google::protobuf::uint32 ContactAdd::optiontype() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.optiontype)
  return optiontype_;
}
inline void ContactAdd::set_optiontype(::google::protobuf::uint32 value) {
  
  optiontype_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.optiontype)
}

// optional uint32 useridA = 3;
inline void ContactAdd::clear_userida() {
  userida_ = 0u;
}
inline ::google::protobuf::uint32 ContactAdd::userida() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.useridA)
  return userida_;
}
inline void ContactAdd::set_userida(::google::protobuf::uint32 value) {
  
  userida_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.useridA)
}

// optional uint32 useridB = 4;
inline void ContactAdd::clear_useridb() {
  useridb_ = 0u;
}
inline ::google::protobuf::uint32 ContactAdd::useridb() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.ContactAdd.useridB)
  return useridb_;
}
inline void ContactAdd::set_useridb(::google::protobuf::uint32 value) {
  
  useridb_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.ContactAdd.useridB)
}

inline const ContactAdd* ContactAdd::internal_default_instance() {
  return &ContactAdd_default_instance_.get();
}
// -------------------------------------------------------------------

// UserInfoAB

// optional uint32 msgtype = 1;
inline void UserInfoAB::clear_msgtype() {
  msgtype_ = 0u;
}
inline ::google::protobuf::uint32 UserInfoAB::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.msgtype)
  return msgtype_;
}
inline void UserInfoAB::set_msgtype(::google::protobuf::uint32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.msgtype)
}

// optional uint32 typeOption = 2;
inline void UserInfoAB::clear_typeoption() {
  typeoption_ = 0u;
}
inline ::google::protobuf::uint32 UserInfoAB::typeoption() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.typeOption)
  return typeoption_;
}
inline void UserInfoAB::set_typeoption(::google::protobuf::uint32 value) {
  
  typeoption_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.typeOption)
}

// optional uint32 userId = 3;
inline void UserInfoAB::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 UserInfoAB::userid() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.userId)
  return userid_;
}
inline void UserInfoAB::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.userId)
}

// optional string name = 4;
inline void UserInfoAB::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfoAB::name() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.name)
}
inline void UserInfoAB::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.name)
}
inline void UserInfoAB::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.name)
}
inline ::std::string* UserInfoAB::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_name() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.name)
}

// optional string head = 5;
inline void UserInfoAB::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfoAB::head() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.head)
}
inline void UserInfoAB::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.head)
}
inline void UserInfoAB::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.head)
}
inline ::std::string* UserInfoAB::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_head() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.head)
}

// optional string birthday = 6;
inline void UserInfoAB::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfoAB::birthday() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.birthday)
  return birthday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.birthday)
}
inline void UserInfoAB::set_birthday(const char* value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.birthday)
}
inline void UserInfoAB::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.birthday)
}
inline ::std::string* UserInfoAB::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_birthday() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.birthday)
}

// optional string email = 7;
inline void UserInfoAB::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfoAB::email() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.email)
}
inline void UserInfoAB::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.email)
}
inline void UserInfoAB::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.email)
}
inline ::std::string* UserInfoAB::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_email() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.email)
}

// optional string token = 8;
inline void UserInfoAB::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfoAB::token() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.token)
}
inline void UserInfoAB::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.token)
}
inline void UserInfoAB::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.token)
}
inline ::std::string* UserInfoAB::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_token() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.token)
}

// optional uint32 sex = 9;
inline void UserInfoAB::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 UserInfoAB::sex() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.sex)
  return sex_;
}
inline void UserInfoAB::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.sex)
}

// optional string phone = 10;
inline void UserInfoAB::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfoAB::phone() const {
  // @@protoc_insertion_point(field_get:MarsContactAdd.UserInfoAB.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsContactAdd.UserInfoAB.phone)
}
inline void UserInfoAB::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsContactAdd.UserInfoAB.phone)
}
inline void UserInfoAB::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsContactAdd.UserInfoAB.phone)
}
inline ::std::string* UserInfoAB::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:MarsContactAdd.UserInfoAB.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoAB::release_phone() {
  // @@protoc_insertion_point(field_release:MarsContactAdd.UserInfoAB.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoAB::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:MarsContactAdd.UserInfoAB.phone)
}

inline const UserInfoAB* UserInfoAB::internal_default_instance() {
  return &UserInfoAB_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MarsContactAdd

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ContactAdd_2eproto__INCLUDED
