// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "chat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MarsMsgChat {

namespace {

const ::google::protobuf::Descriptor* SendMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_chat_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_chat_2eproto() {
  protobuf_AddDesc_chat_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "chat.proto");
  GOOGLE_CHECK(file != NULL);
  SendMsgReq_descriptor_ = file->message_type(0);
  static const int SendMsgReq_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, access_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, userfrom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, userto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, headimage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, sendname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, senduserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, converstionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, sendtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, msguniqueid_),
  };
  SendMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMsgReq_descriptor_,
      SendMsgReq::internal_default_instance(),
      SendMsgReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, _has_bits_),
      -1,
      -1,
      sizeof(SendMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgReq, _internal_metadata_));
  SendMsgRsp_descriptor_ = file->message_type(1);
  static const int SendMsgRsp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, err_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, errmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, access_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, converstionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, msguniqueid_),
  };
  SendMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMsgRsp_descriptor_,
      SendMsgRsp::internal_default_instance(),
      SendMsgRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, _has_bits_),
      -1,
      -1,
      sizeof(SendMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRsp, _internal_metadata_));
  PushRsp_descriptor_ = file->message_type(2);
  static const int PushRsp_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, msgpushtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, errmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, accesstoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, userfrom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, userto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, headimage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, sendname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, senduserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, converstionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, sendtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, msgid_),
  };
  PushRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PushRsp_descriptor_,
      PushRsp::internal_default_instance(),
      PushRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, _has_bits_),
      -1,
      -1,
      sizeof(PushRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushRsp, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_chat_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMsgReq_descriptor_, SendMsgReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMsgRsp_descriptor_, SendMsgRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PushRsp_descriptor_, PushRsp::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_chat_2eproto() {
  SendMsgReq_default_instance_.Shutdown();
  delete SendMsgReq_reflection_;
  SendMsgRsp_default_instance_.Shutdown();
  delete SendMsgRsp_reflection_;
  PushRsp_default_instance_.Shutdown();
  delete PushRsp_reflection_;
}

void protobuf_InitDefaults_chat_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  SendMsgReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SendMsgRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PushRsp_default_instance_.DefaultConstruct();
  SendMsgReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  SendMsgRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  PushRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_chat_2eproto_once_);
void protobuf_InitDefaults_chat_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_chat_2eproto_once_,
                 &protobuf_InitDefaults_chat_2eproto_impl);
}
void protobuf_AddDesc_chat_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_chat_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nchat.proto\022\013MarsMsgChat\"\332\001\n\nSendMsgReq"
    "\022\024\n\014access_token\030\001 \002(\t\022\020\n\010userfrom\030\002 \002(\t"
    "\022\016\n\006userTo\030\003 \002(\t\022\014\n\004text\030\004 \002(\t\022\017\n\007msgtyp"
    "e\030\005 \002(\005\022\021\n\theadimage\030\006 \002(\t\022\020\n\010sendname\030\007"
    " \002(\t\022\022\n\nsenduserid\030\010 \002(\t\022\025\n\rconverstioni"
    "d\030\n \002(\t\022\020\n\010sendtype\030\013 \002(\005\022\023\n\013msguniqueid"
    "\030\014 \002(\003\"\177\n\nSendMsgRsp\022\020\n\010err_code\030\001 \002(\005\022\016"
    "\n\006errmsg\030\002 \002(\005\022\r\n\005msgid\030\003 \002(\003\022\024\n\014access_"
    "token\030\004 \002(\t\022\025\n\rconverstionid\030\005 \002(\t\022\023\n\013ms"
    "guniqueid\030\006 \002(\003\"\204\002\n\007PushRsp\022\023\n\013msgpushty"
    "pe\030\001 \002(\005\022\016\n\006errmsg\030\002 \002(\005\022\r\n\005state\030\003 \002(\005\022"
    "\023\n\013accesstoken\030\004 \002(\t\022\020\n\010userfrom\030\005 \002(\t\022\016"
    "\n\006userto\030\006 \002(\t\022\014\n\004text\030\007 \002(\t\022\021\n\theadimag"
    "e\030\010 \002(\t\022\020\n\010sendname\030\t \002(\t\022\022\n\nsenduserid\030"
    "\n \002(\t\022\025\n\rconverstionid\030\013 \002(\t\022\020\n\010sendtype"
    "\030\014 \002(\005\022\017\n\007msgtype\030\r \002(\005\022\r\n\005msgid\030\016 \002(\003", 638);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_chat_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_chat_2eproto_once_);
void protobuf_AddDesc_chat_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_chat_2eproto_once_,
                 &protobuf_AddDesc_chat_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_chat_2eproto {
  StaticDescriptorInitializer_chat_2eproto() {
    protobuf_AddDesc_chat_2eproto();
  }
} static_descriptor_initializer_chat_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMsgReq::kAccessTokenFieldNumber;
const int SendMsgReq::kUserfromFieldNumber;
const int SendMsgReq::kUserToFieldNumber;
const int SendMsgReq::kTextFieldNumber;
const int SendMsgReq::kMsgtypeFieldNumber;
const int SendMsgReq::kHeadimageFieldNumber;
const int SendMsgReq::kSendnameFieldNumber;
const int SendMsgReq::kSenduseridFieldNumber;
const int SendMsgReq::kConverstionidFieldNumber;
const int SendMsgReq::kSendtypeFieldNumber;
const int SendMsgReq::kMsguniqueidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMsgReq::SendMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_chat_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MarsMsgChat.SendMsgReq)
}

void SendMsgReq::InitAsDefaultInstance() {
}

SendMsgReq::SendMsgReq(const SendMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MarsMsgChat.SendMsgReq)
}

void SendMsgReq::SharedCtor() {
  _cached_size_ = 0;
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senduserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  converstionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, reinterpret_cast<char*>(&msguniqueid_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(msguniqueid_));
}

SendMsgReq::~SendMsgReq() {
  // @@protoc_insertion_point(destructor:MarsMsgChat.SendMsgReq)
  SharedDtor();
}

void SendMsgReq::SharedDtor() {
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senduserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  converstionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMsgReq_descriptor_;
}

const SendMsgReq& SendMsgReq::default_instance() {
  protobuf_InitDefaults_chat_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SendMsgReq> SendMsgReq_default_instance_;

SendMsgReq* SendMsgReq::New(::google::protobuf::Arena* arena) const {
  SendMsgReq* n = new SendMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MarsMsgChat.SendMsgReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SendMsgReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SendMsgReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    if (has_access_token()) {
      access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_userfrom()) {
      userfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_userto()) {
      userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    msgtype_ = 0;
    if (has_headimage()) {
      headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sendname()) {
      sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_senduserid()) {
      senduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ZR_(sendtype_, msguniqueid_);
    if (has_converstionid()) {
      converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MarsMsgChat.SendMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string access_token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->access_token().data(), this->access_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.access_token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userfrom;
        break;
      }

      // required string userfrom = 2;
      case 2: {
        if (tag == 18) {
         parse_userfrom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userfrom()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userfrom().data(), this->userfrom().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.userfrom");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_userTo;
        break;
      }

      // required string userTo = 3;
      case 3: {
        if (tag == 26) {
         parse_userTo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userto()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userto().data(), this->userto().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.userTo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_text;
        break;
      }

      // required string text = 4;
      case 4: {
        if (tag == 34) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgtype;
        break;
      }

      // required int32 msgtype = 5;
      case 5: {
        if (tag == 40) {
         parse_msgtype:
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_headimage;
        break;
      }

      // required string headimage = 6;
      case 6: {
        if (tag == 50) {
         parse_headimage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headimage().data(), this->headimage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.headimage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sendname;
        break;
      }

      // required string sendname = 7;
      case 7: {
        if (tag == 58) {
         parse_sendname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendname().data(), this->sendname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.sendname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_senduserid;
        break;
      }

      // required string senduserid = 8;
      case 8: {
        if (tag == 66) {
         parse_senduserid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senduserid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->senduserid().data(), this->senduserid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.senduserid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_converstionid;
        break;
      }

      // required string converstionid = 10;
      case 10: {
        if (tag == 82) {
         parse_converstionid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_converstionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->converstionid().data(), this->converstionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgReq.converstionid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_sendtype;
        break;
      }

      // required int32 sendtype = 11;
      case 11: {
        if (tag == 88) {
         parse_sendtype:
          set_has_sendtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sendtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_msguniqueid;
        break;
      }

      // required int64 msguniqueid = 12;
      case 12: {
        if (tag == 96) {
         parse_msguniqueid:
          set_has_msguniqueid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msguniqueid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MarsMsgChat.SendMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MarsMsgChat.SendMsgReq)
  return false;
#undef DO_
}

void SendMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MarsMsgChat.SendMsgReq)
  // required string access_token = 1;
  if (has_access_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), this->access_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_token(), output);
  }

  // required string userfrom = 2;
  if (has_userfrom()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userfrom().data(), this->userfrom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.userfrom");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userfrom(), output);
  }

  // required string userTo = 3;
  if (has_userto()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userto().data(), this->userto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.userTo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->userto(), output);
  }

  // required string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  // required int32 msgtype = 5;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->msgtype(), output);
  }

  // required string headimage = 6;
  if (has_headimage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimage().data(), this->headimage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.headimage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->headimage(), output);
  }

  // required string sendname = 7;
  if (has_sendname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendname().data(), this->sendname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.sendname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sendname(), output);
  }

  // required string senduserid = 8;
  if (has_senduserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senduserid().data(), this->senduserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.senduserid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->senduserid(), output);
  }

  // required string converstionid = 10;
  if (has_converstionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->converstionid().data(), this->converstionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.converstionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->converstionid(), output);
  }

  // required int32 sendtype = 11;
  if (has_sendtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->sendtype(), output);
  }

  // required int64 msguniqueid = 12;
  if (has_msguniqueid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->msguniqueid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MarsMsgChat.SendMsgReq)
}

::google::protobuf::uint8* SendMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MarsMsgChat.SendMsgReq)
  // required string access_token = 1;
  if (has_access_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), this->access_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_token(), target);
  }

  // required string userfrom = 2;
  if (has_userfrom()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userfrom().data(), this->userfrom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.userfrom");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userfrom(), target);
  }

  // required string userTo = 3;
  if (has_userto()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userto().data(), this->userto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.userTo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->userto(), target);
  }

  // required string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  // required int32 msgtype = 5;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->msgtype(), target);
  }

  // required string headimage = 6;
  if (has_headimage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimage().data(), this->headimage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.headimage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->headimage(), target);
  }

  // required string sendname = 7;
  if (has_sendname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendname().data(), this->sendname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.sendname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sendname(), target);
  }

  // required string senduserid = 8;
  if (has_senduserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senduserid().data(), this->senduserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.senduserid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->senduserid(), target);
  }

  // required string converstionid = 10;
  if (has_converstionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->converstionid().data(), this->converstionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgReq.converstionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->converstionid(), target);
  }

  // required int32 sendtype = 11;
  if (has_sendtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->sendtype(), target);
  }

  // required int64 msguniqueid = 12;
  if (has_msguniqueid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->msguniqueid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MarsMsgChat.SendMsgReq)
  return target;
}

size_t SendMsgReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MarsMsgChat.SendMsgReq)
  size_t total_size = 0;

  if (has_access_token()) {
    // required string access_token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());
  }

  if (has_userfrom()) {
    // required string userfrom = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userfrom());
  }

  if (has_userto()) {
    // required string userTo = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userto());
  }

  if (has_text()) {
    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_msgtype()) {
    // required int32 msgtype = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  if (has_headimage()) {
    // required string headimage = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headimage());
  }

  if (has_sendname()) {
    // required string sendname = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendname());
  }

  if (has_senduserid()) {
    // required string senduserid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senduserid());
  }

  if (has_converstionid()) {
    // required string converstionid = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->converstionid());
  }

  if (has_sendtype()) {
    // required int32 sendtype = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sendtype());
  }

  if (has_msguniqueid()) {
    // required int64 msguniqueid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msguniqueid());
  }

  return total_size;
}
size_t SendMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MarsMsgChat.SendMsgReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required string access_token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());

    // required string userfrom = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userfrom());

    // required string userTo = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userto());

    // required string text = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required int32 msgtype = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());

    // required string headimage = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headimage());

    // required string sendname = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendname());

    // required string senduserid = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senduserid());

    // required string converstionid = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->converstionid());

    // required int32 sendtype = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sendtype());

    // required int64 msguniqueid = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msguniqueid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MarsMsgChat.SendMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SendMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MarsMsgChat.SendMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MarsMsgChat.SendMsgReq)
    UnsafeMergeFrom(*source);
  }
}

void SendMsgReq::MergeFrom(const SendMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MarsMsgChat.SendMsgReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SendMsgReq::UnsafeMergeFrom(const SendMsgReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_access_token()) {
      set_has_access_token();
      access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
    }
    if (from.has_userfrom()) {
      set_has_userfrom();
      userfrom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userfrom_);
    }
    if (from.has_userto()) {
      set_has_userto();
      userto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userto_);
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_headimage()) {
      set_has_headimage();
      headimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimage_);
    }
    if (from.has_sendname()) {
      set_has_sendname();
      sendname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendname_);
    }
    if (from.has_senduserid()) {
      set_has_senduserid();
      senduserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senduserid_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_converstionid()) {
      set_has_converstionid();
      converstionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.converstionid_);
    }
    if (from.has_sendtype()) {
      set_sendtype(from.sendtype());
    }
    if (from.has_msguniqueid()) {
      set_msguniqueid(from.msguniqueid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SendMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MarsMsgChat.SendMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMsgReq::CopyFrom(const SendMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MarsMsgChat.SendMsgReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SendMsgReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void SendMsgReq::Swap(SendMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMsgReq::InternalSwap(SendMsgReq* other) {
  access_token_.Swap(&other->access_token_);
  userfrom_.Swap(&other->userfrom_);
  userto_.Swap(&other->userto_);
  text_.Swap(&other->text_);
  std::swap(msgtype_, other->msgtype_);
  headimage_.Swap(&other->headimage_);
  sendname_.Swap(&other->sendname_);
  senduserid_.Swap(&other->senduserid_);
  converstionid_.Swap(&other->converstionid_);
  std::swap(sendtype_, other->sendtype_);
  std::swap(msguniqueid_, other->msguniqueid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMsgReq_descriptor_;
  metadata.reflection = SendMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMsgReq

// required string access_token = 1;
bool SendMsgReq::has_access_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendMsgReq::set_has_access_token() {
  _has_bits_[0] |= 0x00000001u;
}
void SendMsgReq::clear_has_access_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendMsgReq::clear_access_token() {
  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_access_token();
}
const ::std::string& SendMsgReq::access_token() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.access_token)
  return access_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_access_token(const ::std::string& value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.access_token)
}
void SendMsgReq::set_access_token(const char* value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.access_token)
}
void SendMsgReq::set_access_token(const char* value, size_t size) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.access_token)
}
::std::string* SendMsgReq::mutable_access_token() {
  set_has_access_token();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.access_token)
  return access_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_access_token() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.access_token)
  clear_has_access_token();
  return access_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    set_has_access_token();
  } else {
    clear_has_access_token();
  }
  access_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.access_token)
}

// required string userfrom = 2;
bool SendMsgReq::has_userfrom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendMsgReq::set_has_userfrom() {
  _has_bits_[0] |= 0x00000002u;
}
void SendMsgReq::clear_has_userfrom() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendMsgReq::clear_userfrom() {
  userfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userfrom();
}
const ::std::string& SendMsgReq::userfrom() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.userfrom)
  return userfrom_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_userfrom(const ::std::string& value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.userfrom)
}
void SendMsgReq::set_userfrom(const char* value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.userfrom)
}
void SendMsgReq::set_userfrom(const char* value, size_t size) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.userfrom)
}
::std::string* SendMsgReq::mutable_userfrom() {
  set_has_userfrom();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.userfrom)
  return userfrom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_userfrom() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.userfrom)
  clear_has_userfrom();
  return userfrom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_userfrom(::std::string* userfrom) {
  if (userfrom != NULL) {
    set_has_userfrom();
  } else {
    clear_has_userfrom();
  }
  userfrom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userfrom);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.userfrom)
}

// required string userTo = 3;
bool SendMsgReq::has_userto() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendMsgReq::set_has_userto() {
  _has_bits_[0] |= 0x00000004u;
}
void SendMsgReq::clear_has_userto() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendMsgReq::clear_userto() {
  userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userto();
}
const ::std::string& SendMsgReq::userto() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.userTo)
  return userto_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_userto(const ::std::string& value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.userTo)
}
void SendMsgReq::set_userto(const char* value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.userTo)
}
void SendMsgReq::set_userto(const char* value, size_t size) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.userTo)
}
::std::string* SendMsgReq::mutable_userto() {
  set_has_userto();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.userTo)
  return userto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_userto() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.userTo)
  clear_has_userto();
  return userto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_userto(::std::string* userto) {
  if (userto != NULL) {
    set_has_userto();
  } else {
    clear_has_userto();
  }
  userto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userto);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.userTo)
}

// required string text = 4;
bool SendMsgReq::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendMsgReq::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
void SendMsgReq::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendMsgReq::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& SendMsgReq::text() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.text)
}
void SendMsgReq::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.text)
}
void SendMsgReq::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.text)
}
::std::string* SendMsgReq::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_text() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.text)
}

// required int32 msgtype = 5;
bool SendMsgReq::has_msgtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendMsgReq::set_has_msgtype() {
  _has_bits_[0] |= 0x00000010u;
}
void SendMsgReq::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendMsgReq::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 SendMsgReq::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.msgtype)
  return msgtype_;
}
void SendMsgReq::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.msgtype)
}

// required string headimage = 6;
bool SendMsgReq::has_headimage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SendMsgReq::set_has_headimage() {
  _has_bits_[0] |= 0x00000020u;
}
void SendMsgReq::clear_has_headimage() {
  _has_bits_[0] &= ~0x00000020u;
}
void SendMsgReq::clear_headimage() {
  headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimage();
}
const ::std::string& SendMsgReq::headimage() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.headimage)
  return headimage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_headimage(const ::std::string& value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.headimage)
}
void SendMsgReq::set_headimage(const char* value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.headimage)
}
void SendMsgReq::set_headimage(const char* value, size_t size) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.headimage)
}
::std::string* SendMsgReq::mutable_headimage() {
  set_has_headimage();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.headimage)
  return headimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_headimage() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.headimage)
  clear_has_headimage();
  return headimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_headimage(::std::string* headimage) {
  if (headimage != NULL) {
    set_has_headimage();
  } else {
    clear_has_headimage();
  }
  headimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimage);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.headimage)
}

// required string sendname = 7;
bool SendMsgReq::has_sendname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SendMsgReq::set_has_sendname() {
  _has_bits_[0] |= 0x00000040u;
}
void SendMsgReq::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000040u;
}
void SendMsgReq::clear_sendname() {
  sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendname();
}
const ::std::string& SendMsgReq::sendname() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.sendname)
  return sendname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_sendname(const ::std::string& value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.sendname)
}
void SendMsgReq::set_sendname(const char* value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.sendname)
}
void SendMsgReq::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.sendname)
}
::std::string* SendMsgReq::mutable_sendname() {
  set_has_sendname();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.sendname)
  return sendname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_sendname() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.sendname)
  clear_has_sendname();
  return sendname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_sendname(::std::string* sendname) {
  if (sendname != NULL) {
    set_has_sendname();
  } else {
    clear_has_sendname();
  }
  sendname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendname);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.sendname)
}

// required string senduserid = 8;
bool SendMsgReq::has_senduserid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SendMsgReq::set_has_senduserid() {
  _has_bits_[0] |= 0x00000080u;
}
void SendMsgReq::clear_has_senduserid() {
  _has_bits_[0] &= ~0x00000080u;
}
void SendMsgReq::clear_senduserid() {
  senduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senduserid();
}
const ::std::string& SendMsgReq::senduserid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.senduserid)
  return senduserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_senduserid(const ::std::string& value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.senduserid)
}
void SendMsgReq::set_senduserid(const char* value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.senduserid)
}
void SendMsgReq::set_senduserid(const char* value, size_t size) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.senduserid)
}
::std::string* SendMsgReq::mutable_senduserid() {
  set_has_senduserid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.senduserid)
  return senduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_senduserid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.senduserid)
  clear_has_senduserid();
  return senduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_senduserid(::std::string* senduserid) {
  if (senduserid != NULL) {
    set_has_senduserid();
  } else {
    clear_has_senduserid();
  }
  senduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senduserid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.senduserid)
}

// required string converstionid = 10;
bool SendMsgReq::has_converstionid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SendMsgReq::set_has_converstionid() {
  _has_bits_[0] |= 0x00000100u;
}
void SendMsgReq::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000100u;
}
void SendMsgReq::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
const ::std::string& SendMsgReq::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.converstionid)
}
void SendMsgReq::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgReq.converstionid)
}
void SendMsgReq::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgReq.converstionid)
}
::std::string* SendMsgReq::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgReq.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgReq::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgReq.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgReq::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgReq.converstionid)
}

// required int32 sendtype = 11;
bool SendMsgReq::has_sendtype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SendMsgReq::set_has_sendtype() {
  _has_bits_[0] |= 0x00000200u;
}
void SendMsgReq::clear_has_sendtype() {
  _has_bits_[0] &= ~0x00000200u;
}
void SendMsgReq::clear_sendtype() {
  sendtype_ = 0;
  clear_has_sendtype();
}
::google::protobuf::int32 SendMsgReq::sendtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.sendtype)
  return sendtype_;
}
void SendMsgReq::set_sendtype(::google::protobuf::int32 value) {
  set_has_sendtype();
  sendtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.sendtype)
}

// required int64 msguniqueid = 12;
bool SendMsgReq::has_msguniqueid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SendMsgReq::set_has_msguniqueid() {
  _has_bits_[0] |= 0x00000400u;
}
void SendMsgReq::clear_has_msguniqueid() {
  _has_bits_[0] &= ~0x00000400u;
}
void SendMsgReq::clear_msguniqueid() {
  msguniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_msguniqueid();
}
::google::protobuf::int64 SendMsgReq::msguniqueid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgReq.msguniqueid)
  return msguniqueid_;
}
void SendMsgReq::set_msguniqueid(::google::protobuf::int64 value) {
  set_has_msguniqueid();
  msguniqueid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgReq.msguniqueid)
}

inline const SendMsgReq* SendMsgReq::internal_default_instance() {
  return &SendMsgReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMsgRsp::kErrCodeFieldNumber;
const int SendMsgRsp::kErrmsgFieldNumber;
const int SendMsgRsp::kMsgidFieldNumber;
const int SendMsgRsp::kAccessTokenFieldNumber;
const int SendMsgRsp::kConverstionidFieldNumber;
const int SendMsgRsp::kMsguniqueidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMsgRsp::SendMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_chat_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MarsMsgChat.SendMsgRsp)
}

void SendMsgRsp::InitAsDefaultInstance() {
}

SendMsgRsp::SendMsgRsp(const SendMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MarsMsgChat.SendMsgRsp)
}

void SendMsgRsp::SharedCtor() {
  _cached_size_ = 0;
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  converstionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&err_code_, 0, reinterpret_cast<char*>(&msguniqueid_) -
    reinterpret_cast<char*>(&err_code_) + sizeof(msguniqueid_));
}

SendMsgRsp::~SendMsgRsp() {
  // @@protoc_insertion_point(destructor:MarsMsgChat.SendMsgRsp)
  SharedDtor();
}

void SendMsgRsp::SharedDtor() {
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  converstionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMsgRsp_descriptor_;
}

const SendMsgRsp& SendMsgRsp::default_instance() {
  protobuf_InitDefaults_chat_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SendMsgRsp> SendMsgRsp_default_instance_;

SendMsgRsp* SendMsgRsp::New(::google::protobuf::Arena* arena) const {
  SendMsgRsp* n = new SendMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MarsMsgChat.SendMsgRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SendMsgRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SendMsgRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(err_code_, msguniqueid_);
    if (has_access_token()) {
      access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_converstionid()) {
      converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MarsMsgChat.SendMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err_code = 1;
      case 1: {
        if (tag == 8) {
          set_has_err_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errmsg;
        break;
      }

      // required int32 errmsg = 2;
      case 2: {
        if (tag == 16) {
         parse_errmsg:
          set_has_errmsg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errmsg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgid;
        break;
      }

      // required int64 msgid = 3;
      case 3: {
        if (tag == 24) {
         parse_msgid:
          set_has_msgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_access_token;
        break;
      }

      // required string access_token = 4;
      case 4: {
        if (tag == 34) {
         parse_access_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->access_token().data(), this->access_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgRsp.access_token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_converstionid;
        break;
      }

      // required string converstionid = 5;
      case 5: {
        if (tag == 42) {
         parse_converstionid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_converstionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->converstionid().data(), this->converstionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.SendMsgRsp.converstionid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msguniqueid;
        break;
      }

      // required int64 msguniqueid = 6;
      case 6: {
        if (tag == 48) {
         parse_msguniqueid:
          set_has_msguniqueid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msguniqueid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MarsMsgChat.SendMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MarsMsgChat.SendMsgRsp)
  return false;
#undef DO_
}

void SendMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MarsMsgChat.SendMsgRsp)
  // required int32 err_code = 1;
  if (has_err_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_code(), output);
  }

  // required int32 errmsg = 2;
  if (has_errmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errmsg(), output);
  }

  // required int64 msgid = 3;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->msgid(), output);
  }

  // required string access_token = 4;
  if (has_access_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), this->access_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgRsp.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->access_token(), output);
  }

  // required string converstionid = 5;
  if (has_converstionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->converstionid().data(), this->converstionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgRsp.converstionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->converstionid(), output);
  }

  // required int64 msguniqueid = 6;
  if (has_msguniqueid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->msguniqueid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MarsMsgChat.SendMsgRsp)
}

::google::protobuf::uint8* SendMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MarsMsgChat.SendMsgRsp)
  // required int32 err_code = 1;
  if (has_err_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_code(), target);
  }

  // required int32 errmsg = 2;
  if (has_errmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errmsg(), target);
  }

  // required int64 msgid = 3;
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->msgid(), target);
  }

  // required string access_token = 4;
  if (has_access_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->access_token().data(), this->access_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgRsp.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->access_token(), target);
  }

  // required string converstionid = 5;
  if (has_converstionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->converstionid().data(), this->converstionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.SendMsgRsp.converstionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->converstionid(), target);
  }

  // required int64 msguniqueid = 6;
  if (has_msguniqueid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->msguniqueid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MarsMsgChat.SendMsgRsp)
  return target;
}

size_t SendMsgRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MarsMsgChat.SendMsgRsp)
  size_t total_size = 0;

  if (has_err_code()) {
    // required int32 err_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());
  }

  if (has_errmsg()) {
    // required int32 errmsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errmsg());
  }

  if (has_msgid()) {
    // required int64 msgid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgid());
  }

  if (has_access_token()) {
    // required string access_token = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());
  }

  if (has_converstionid()) {
    // required string converstionid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->converstionid());
  }

  if (has_msguniqueid()) {
    // required int64 msguniqueid = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msguniqueid());
  }

  return total_size;
}
size_t SendMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MarsMsgChat.SendMsgRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int32 err_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_code());

    // required int32 errmsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errmsg());

    // required int64 msgid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgid());

    // required string access_token = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());

    // required string converstionid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->converstionid());

    // required int64 msguniqueid = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msguniqueid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MarsMsgChat.SendMsgRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SendMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MarsMsgChat.SendMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MarsMsgChat.SendMsgRsp)
    UnsafeMergeFrom(*source);
  }
}

void SendMsgRsp::MergeFrom(const SendMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MarsMsgChat.SendMsgRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SendMsgRsp::UnsafeMergeFrom(const SendMsgRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err_code()) {
      set_err_code(from.err_code());
    }
    if (from.has_errmsg()) {
      set_errmsg(from.errmsg());
    }
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_access_token()) {
      set_has_access_token();
      access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
    }
    if (from.has_converstionid()) {
      set_has_converstionid();
      converstionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.converstionid_);
    }
    if (from.has_msguniqueid()) {
      set_msguniqueid(from.msguniqueid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SendMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MarsMsgChat.SendMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMsgRsp::CopyFrom(const SendMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MarsMsgChat.SendMsgRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SendMsgRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void SendMsgRsp::Swap(SendMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMsgRsp::InternalSwap(SendMsgRsp* other) {
  std::swap(err_code_, other->err_code_);
  std::swap(errmsg_, other->errmsg_);
  std::swap(msgid_, other->msgid_);
  access_token_.Swap(&other->access_token_);
  converstionid_.Swap(&other->converstionid_);
  std::swap(msguniqueid_, other->msguniqueid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMsgRsp_descriptor_;
  metadata.reflection = SendMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMsgRsp

// required int32 err_code = 1;
bool SendMsgRsp::has_err_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendMsgRsp::set_has_err_code() {
  _has_bits_[0] |= 0x00000001u;
}
void SendMsgRsp::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendMsgRsp::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
::google::protobuf::int32 SendMsgRsp::err_code() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.err_code)
  return err_code_;
}
void SendMsgRsp::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.err_code)
}

// required int32 errmsg = 2;
bool SendMsgRsp::has_errmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendMsgRsp::set_has_errmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void SendMsgRsp::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendMsgRsp::clear_errmsg() {
  errmsg_ = 0;
  clear_has_errmsg();
}
::google::protobuf::int32 SendMsgRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.errmsg)
  return errmsg_;
}
void SendMsgRsp::set_errmsg(::google::protobuf::int32 value) {
  set_has_errmsg();
  errmsg_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.errmsg)
}

// required int64 msgid = 3;
bool SendMsgRsp::has_msgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendMsgRsp::set_has_msgid() {
  _has_bits_[0] |= 0x00000004u;
}
void SendMsgRsp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendMsgRsp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
  clear_has_msgid();
}
::google::protobuf::int64 SendMsgRsp::msgid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.msgid)
  return msgid_;
}
void SendMsgRsp::set_msgid(::google::protobuf::int64 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.msgid)
}

// required string access_token = 4;
bool SendMsgRsp::has_access_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendMsgRsp::set_has_access_token() {
  _has_bits_[0] |= 0x00000008u;
}
void SendMsgRsp::clear_has_access_token() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendMsgRsp::clear_access_token() {
  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_access_token();
}
const ::std::string& SendMsgRsp::access_token() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.access_token)
  return access_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgRsp::set_access_token(const ::std::string& value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.access_token)
}
void SendMsgRsp::set_access_token(const char* value) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgRsp.access_token)
}
void SendMsgRsp::set_access_token(const char* value, size_t size) {
  set_has_access_token();
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgRsp.access_token)
}
::std::string* SendMsgRsp::mutable_access_token() {
  set_has_access_token();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgRsp.access_token)
  return access_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgRsp::release_access_token() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgRsp.access_token)
  clear_has_access_token();
  return access_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgRsp::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    set_has_access_token();
  } else {
    clear_has_access_token();
  }
  access_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgRsp.access_token)
}

// required string converstionid = 5;
bool SendMsgRsp::has_converstionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendMsgRsp::set_has_converstionid() {
  _has_bits_[0] |= 0x00000010u;
}
void SendMsgRsp::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendMsgRsp::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
const ::std::string& SendMsgRsp::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgRsp::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.converstionid)
}
void SendMsgRsp::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.SendMsgRsp.converstionid)
}
void SendMsgRsp::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.SendMsgRsp.converstionid)
}
::std::string* SendMsgRsp::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.SendMsgRsp.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendMsgRsp::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.SendMsgRsp.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendMsgRsp::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.SendMsgRsp.converstionid)
}

// required int64 msguniqueid = 6;
bool SendMsgRsp::has_msguniqueid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SendMsgRsp::set_has_msguniqueid() {
  _has_bits_[0] |= 0x00000020u;
}
void SendMsgRsp::clear_has_msguniqueid() {
  _has_bits_[0] &= ~0x00000020u;
}
void SendMsgRsp::clear_msguniqueid() {
  msguniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_msguniqueid();
}
::google::protobuf::int64 SendMsgRsp::msguniqueid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.SendMsgRsp.msguniqueid)
  return msguniqueid_;
}
void SendMsgRsp::set_msguniqueid(::google::protobuf::int64 value) {
  set_has_msguniqueid();
  msguniqueid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.SendMsgRsp.msguniqueid)
}

inline const SendMsgRsp* SendMsgRsp::internal_default_instance() {
  return &SendMsgRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushRsp::kMsgpushtypeFieldNumber;
const int PushRsp::kErrmsgFieldNumber;
const int PushRsp::kStateFieldNumber;
const int PushRsp::kAccesstokenFieldNumber;
const int PushRsp::kUserfromFieldNumber;
const int PushRsp::kUsertoFieldNumber;
const int PushRsp::kTextFieldNumber;
const int PushRsp::kHeadimageFieldNumber;
const int PushRsp::kSendnameFieldNumber;
const int PushRsp::kSenduseridFieldNumber;
const int PushRsp::kConverstionidFieldNumber;
const int PushRsp::kSendtypeFieldNumber;
const int PushRsp::kMsgtypeFieldNumber;
const int PushRsp::kMsgidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushRsp::PushRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_chat_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:MarsMsgChat.PushRsp)
}

void PushRsp::InitAsDefaultInstance() {
}

PushRsp::PushRsp(const PushRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MarsMsgChat.PushRsp)
}

void PushRsp::SharedCtor() {
  _cached_size_ = 0;
  accesstoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senduserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  converstionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgpushtype_, 0, reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&msgpushtype_) + sizeof(msgtype_));
}

PushRsp::~PushRsp() {
  // @@protoc_insertion_point(destructor:MarsMsgChat.PushRsp)
  SharedDtor();
}

void PushRsp::SharedDtor() {
  accesstoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  senduserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  converstionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushRsp_descriptor_;
}

const PushRsp& PushRsp::default_instance() {
  protobuf_InitDefaults_chat_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PushRsp> PushRsp_default_instance_;

PushRsp* PushRsp::New(::google::protobuf::Arena* arena) const {
  PushRsp* n = new PushRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MarsMsgChat.PushRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PushRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PushRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(msgpushtype_, state_);
    if (has_accesstoken()) {
      accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_userfrom()) {
      userfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_userto()) {
      userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_headimage()) {
      headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(sendtype_, msgtype_);
    if (has_sendname()) {
      sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_senduserid()) {
      senduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_converstionid()) {
      converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PushRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MarsMsgChat.PushRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 msgpushtype = 1;
      case 1: {
        if (tag == 8) {
          set_has_msgpushtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgpushtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errmsg;
        break;
      }

      // required int32 errmsg = 2;
      case 2: {
        if (tag == 16) {
         parse_errmsg:
          set_has_errmsg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errmsg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // required int32 state = 3;
      case 3: {
        if (tag == 24) {
         parse_state:
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_accesstoken;
        break;
      }

      // required string accesstoken = 4;
      case 4: {
        if (tag == 34) {
         parse_accesstoken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accesstoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accesstoken().data(), this->accesstoken().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.accesstoken");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userfrom;
        break;
      }

      // required string userfrom = 5;
      case 5: {
        if (tag == 42) {
         parse_userfrom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userfrom()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userfrom().data(), this->userfrom().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.userfrom");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_userto;
        break;
      }

      // required string userto = 6;
      case 6: {
        if (tag == 50) {
         parse_userto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userto()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userto().data(), this->userto().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.userto");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_text;
        break;
      }

      // required string text = 7;
      case 7: {
        if (tag == 58) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_headimage;
        break;
      }

      // required string headimage = 8;
      case 8: {
        if (tag == 66) {
         parse_headimage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headimage().data(), this->headimage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.headimage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_sendname;
        break;
      }

      // required string sendname = 9;
      case 9: {
        if (tag == 74) {
         parse_sendname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sendname().data(), this->sendname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.sendname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_senduserid;
        break;
      }

      // required string senduserid = 10;
      case 10: {
        if (tag == 82) {
         parse_senduserid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_senduserid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->senduserid().data(), this->senduserid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.senduserid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_converstionid;
        break;
      }

      // required string converstionid = 11;
      case 11: {
        if (tag == 90) {
         parse_converstionid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_converstionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->converstionid().data(), this->converstionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MarsMsgChat.PushRsp.converstionid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_sendtype;
        break;
      }

      // required int32 sendtype = 12;
      case 12: {
        if (tag == 96) {
         parse_sendtype:
          set_has_sendtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sendtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_msgtype;
        break;
      }

      // required int32 msgtype = 13;
      case 13: {
        if (tag == 104) {
         parse_msgtype:
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_msgid;
        break;
      }

      // required int64 msgid = 14;
      case 14: {
        if (tag == 112) {
         parse_msgid:
          set_has_msgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MarsMsgChat.PushRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MarsMsgChat.PushRsp)
  return false;
#undef DO_
}

void PushRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MarsMsgChat.PushRsp)
  // required int32 msgpushtype = 1;
  if (has_msgpushtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgpushtype(), output);
  }

  // required int32 errmsg = 2;
  if (has_errmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errmsg(), output);
  }

  // required int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }

  // required string accesstoken = 4;
  if (has_accesstoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accesstoken().data(), this->accesstoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.accesstoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->accesstoken(), output);
  }

  // required string userfrom = 5;
  if (has_userfrom()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userfrom().data(), this->userfrom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.userfrom");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->userfrom(), output);
  }

  // required string userto = 6;
  if (has_userto()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userto().data(), this->userto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.userto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->userto(), output);
  }

  // required string text = 7;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->text(), output);
  }

  // required string headimage = 8;
  if (has_headimage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimage().data(), this->headimage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.headimage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->headimage(), output);
  }

  // required string sendname = 9;
  if (has_sendname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendname().data(), this->sendname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.sendname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sendname(), output);
  }

  // required string senduserid = 10;
  if (has_senduserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senduserid().data(), this->senduserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.senduserid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->senduserid(), output);
  }

  // required string converstionid = 11;
  if (has_converstionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->converstionid().data(), this->converstionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.converstionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->converstionid(), output);
  }

  // required int32 sendtype = 12;
  if (has_sendtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->sendtype(), output);
  }

  // required int32 msgtype = 13;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->msgtype(), output);
  }

  // required int64 msgid = 14;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->msgid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MarsMsgChat.PushRsp)
}

::google::protobuf::uint8* PushRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MarsMsgChat.PushRsp)
  // required int32 msgpushtype = 1;
  if (has_msgpushtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgpushtype(), target);
  }

  // required int32 errmsg = 2;
  if (has_errmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errmsg(), target);
  }

  // required int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }

  // required string accesstoken = 4;
  if (has_accesstoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accesstoken().data(), this->accesstoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.accesstoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->accesstoken(), target);
  }

  // required string userfrom = 5;
  if (has_userfrom()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userfrom().data(), this->userfrom().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.userfrom");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->userfrom(), target);
  }

  // required string userto = 6;
  if (has_userto()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userto().data(), this->userto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.userto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->userto(), target);
  }

  // required string text = 7;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->text(), target);
  }

  // required string headimage = 8;
  if (has_headimage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimage().data(), this->headimage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.headimage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->headimage(), target);
  }

  // required string sendname = 9;
  if (has_sendname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sendname().data(), this->sendname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.sendname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sendname(), target);
  }

  // required string senduserid = 10;
  if (has_senduserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->senduserid().data(), this->senduserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.senduserid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->senduserid(), target);
  }

  // required string converstionid = 11;
  if (has_converstionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->converstionid().data(), this->converstionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MarsMsgChat.PushRsp.converstionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->converstionid(), target);
  }

  // required int32 sendtype = 12;
  if (has_sendtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->sendtype(), target);
  }

  // required int32 msgtype = 13;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->msgtype(), target);
  }

  // required int64 msgid = 14;
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->msgid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MarsMsgChat.PushRsp)
  return target;
}

size_t PushRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MarsMsgChat.PushRsp)
  size_t total_size = 0;

  if (has_msgpushtype()) {
    // required int32 msgpushtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgpushtype());
  }

  if (has_errmsg()) {
    // required int32 errmsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errmsg());
  }

  if (has_state()) {
    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  if (has_accesstoken()) {
    // required string accesstoken = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accesstoken());
  }

  if (has_userfrom()) {
    // required string userfrom = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userfrom());
  }

  if (has_userto()) {
    // required string userto = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userto());
  }

  if (has_text()) {
    // required string text = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (has_headimage()) {
    // required string headimage = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headimage());
  }

  if (has_sendname()) {
    // required string sendname = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendname());
  }

  if (has_senduserid()) {
    // required string senduserid = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senduserid());
  }

  if (has_converstionid()) {
    // required string converstionid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->converstionid());
  }

  if (has_sendtype()) {
    // required int32 sendtype = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sendtype());
  }

  if (has_msgtype()) {
    // required int32 msgtype = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  if (has_msgid()) {
    // required int64 msgid = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgid());
  }

  return total_size;
}
size_t PushRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MarsMsgChat.PushRsp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00003fff) ^ 0x00003fff) == 0) {  // All required fields are present.
    // required int32 msgpushtype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgpushtype());

    // required int32 errmsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errmsg());

    // required int32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());

    // required string accesstoken = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accesstoken());

    // required string userfrom = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userfrom());

    // required string userto = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userto());

    // required string text = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());

    // required string headimage = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headimage());

    // required string sendname = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendname());

    // required string senduserid = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->senduserid());

    // required string converstionid = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->converstionid());

    // required int32 sendtype = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sendtype());

    // required int32 msgtype = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());

    // required int64 msgid = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MarsMsgChat.PushRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PushRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MarsMsgChat.PushRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MarsMsgChat.PushRsp)
    UnsafeMergeFrom(*source);
  }
}

void PushRsp::MergeFrom(const PushRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MarsMsgChat.PushRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PushRsp::UnsafeMergeFrom(const PushRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgpushtype()) {
      set_msgpushtype(from.msgpushtype());
    }
    if (from.has_errmsg()) {
      set_errmsg(from.errmsg());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_accesstoken()) {
      set_has_accesstoken();
      accesstoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accesstoken_);
    }
    if (from.has_userfrom()) {
      set_has_userfrom();
      userfrom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userfrom_);
    }
    if (from.has_userto()) {
      set_has_userto();
      userto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userto_);
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_headimage()) {
      set_has_headimage();
      headimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimage_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sendname()) {
      set_has_sendname();
      sendname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendname_);
    }
    if (from.has_senduserid()) {
      set_has_senduserid();
      senduserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.senduserid_);
    }
    if (from.has_converstionid()) {
      set_has_converstionid();
      converstionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.converstionid_);
    }
    if (from.has_sendtype()) {
      set_sendtype(from.sendtype());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PushRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MarsMsgChat.PushRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushRsp::CopyFrom(const PushRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MarsMsgChat.PushRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PushRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003fff) != 0x00003fff) return false;

  return true;
}

void PushRsp::Swap(PushRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushRsp::InternalSwap(PushRsp* other) {
  std::swap(msgpushtype_, other->msgpushtype_);
  std::swap(errmsg_, other->errmsg_);
  std::swap(state_, other->state_);
  accesstoken_.Swap(&other->accesstoken_);
  userfrom_.Swap(&other->userfrom_);
  userto_.Swap(&other->userto_);
  text_.Swap(&other->text_);
  headimage_.Swap(&other->headimage_);
  sendname_.Swap(&other->sendname_);
  senduserid_.Swap(&other->senduserid_);
  converstionid_.Swap(&other->converstionid_);
  std::swap(sendtype_, other->sendtype_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(msgid_, other->msgid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushRsp_descriptor_;
  metadata.reflection = PushRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushRsp

// required int32 msgpushtype = 1;
bool PushRsp::has_msgpushtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PushRsp::set_has_msgpushtype() {
  _has_bits_[0] |= 0x00000001u;
}
void PushRsp::clear_has_msgpushtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void PushRsp::clear_msgpushtype() {
  msgpushtype_ = 0;
  clear_has_msgpushtype();
}
::google::protobuf::int32 PushRsp::msgpushtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.msgpushtype)
  return msgpushtype_;
}
void PushRsp::set_msgpushtype(::google::protobuf::int32 value) {
  set_has_msgpushtype();
  msgpushtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.msgpushtype)
}

// required int32 errmsg = 2;
bool PushRsp::has_errmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PushRsp::set_has_errmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void PushRsp::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void PushRsp::clear_errmsg() {
  errmsg_ = 0;
  clear_has_errmsg();
}
::google::protobuf::int32 PushRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.errmsg)
  return errmsg_;
}
void PushRsp::set_errmsg(::google::protobuf::int32 value) {
  set_has_errmsg();
  errmsg_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.errmsg)
}

// required int32 state = 3;
bool PushRsp::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PushRsp::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
void PushRsp::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
void PushRsp::clear_state() {
  state_ = 0;
  clear_has_state();
}
::google::protobuf::int32 PushRsp::state() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.state)
  return state_;
}
void PushRsp::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.state)
}

// required string accesstoken = 4;
bool PushRsp::has_accesstoken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PushRsp::set_has_accesstoken() {
  _has_bits_[0] |= 0x00000008u;
}
void PushRsp::clear_has_accesstoken() {
  _has_bits_[0] &= ~0x00000008u;
}
void PushRsp::clear_accesstoken() {
  accesstoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accesstoken();
}
const ::std::string& PushRsp::accesstoken() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.accesstoken)
  return accesstoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_accesstoken(const ::std::string& value) {
  set_has_accesstoken();
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.accesstoken)
}
void PushRsp::set_accesstoken(const char* value) {
  set_has_accesstoken();
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.accesstoken)
}
void PushRsp::set_accesstoken(const char* value, size_t size) {
  set_has_accesstoken();
  accesstoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.accesstoken)
}
::std::string* PushRsp::mutable_accesstoken() {
  set_has_accesstoken();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.accesstoken)
  return accesstoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_accesstoken() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.accesstoken)
  clear_has_accesstoken();
  return accesstoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_accesstoken(::std::string* accesstoken) {
  if (accesstoken != NULL) {
    set_has_accesstoken();
  } else {
    clear_has_accesstoken();
  }
  accesstoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accesstoken);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.accesstoken)
}

// required string userfrom = 5;
bool PushRsp::has_userfrom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PushRsp::set_has_userfrom() {
  _has_bits_[0] |= 0x00000010u;
}
void PushRsp::clear_has_userfrom() {
  _has_bits_[0] &= ~0x00000010u;
}
void PushRsp::clear_userfrom() {
  userfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userfrom();
}
const ::std::string& PushRsp::userfrom() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.userfrom)
  return userfrom_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_userfrom(const ::std::string& value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.userfrom)
}
void PushRsp::set_userfrom(const char* value) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.userfrom)
}
void PushRsp::set_userfrom(const char* value, size_t size) {
  set_has_userfrom();
  userfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.userfrom)
}
::std::string* PushRsp::mutable_userfrom() {
  set_has_userfrom();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.userfrom)
  return userfrom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_userfrom() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.userfrom)
  clear_has_userfrom();
  return userfrom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_userfrom(::std::string* userfrom) {
  if (userfrom != NULL) {
    set_has_userfrom();
  } else {
    clear_has_userfrom();
  }
  userfrom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userfrom);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.userfrom)
}

// required string userto = 6;
bool PushRsp::has_userto() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PushRsp::set_has_userto() {
  _has_bits_[0] |= 0x00000020u;
}
void PushRsp::clear_has_userto() {
  _has_bits_[0] &= ~0x00000020u;
}
void PushRsp::clear_userto() {
  userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userto();
}
const ::std::string& PushRsp::userto() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.userto)
  return userto_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_userto(const ::std::string& value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.userto)
}
void PushRsp::set_userto(const char* value) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.userto)
}
void PushRsp::set_userto(const char* value, size_t size) {
  set_has_userto();
  userto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.userto)
}
::std::string* PushRsp::mutable_userto() {
  set_has_userto();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.userto)
  return userto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_userto() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.userto)
  clear_has_userto();
  return userto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_userto(::std::string* userto) {
  if (userto != NULL) {
    set_has_userto();
  } else {
    clear_has_userto();
  }
  userto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userto);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.userto)
}

// required string text = 7;
bool PushRsp::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PushRsp::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
void PushRsp::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
void PushRsp::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& PushRsp::text() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.text)
}
void PushRsp::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.text)
}
void PushRsp::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.text)
}
::std::string* PushRsp::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_text() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.text)
}

// required string headimage = 8;
bool PushRsp::has_headimage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PushRsp::set_has_headimage() {
  _has_bits_[0] |= 0x00000080u;
}
void PushRsp::clear_has_headimage() {
  _has_bits_[0] &= ~0x00000080u;
}
void PushRsp::clear_headimage() {
  headimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimage();
}
const ::std::string& PushRsp::headimage() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.headimage)
  return headimage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_headimage(const ::std::string& value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.headimage)
}
void PushRsp::set_headimage(const char* value) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.headimage)
}
void PushRsp::set_headimage(const char* value, size_t size) {
  set_has_headimage();
  headimage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.headimage)
}
::std::string* PushRsp::mutable_headimage() {
  set_has_headimage();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.headimage)
  return headimage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_headimage() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.headimage)
  clear_has_headimage();
  return headimage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_headimage(::std::string* headimage) {
  if (headimage != NULL) {
    set_has_headimage();
  } else {
    clear_has_headimage();
  }
  headimage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimage);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.headimage)
}

// required string sendname = 9;
bool PushRsp::has_sendname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PushRsp::set_has_sendname() {
  _has_bits_[0] |= 0x00000100u;
}
void PushRsp::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000100u;
}
void PushRsp::clear_sendname() {
  sendname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendname();
}
const ::std::string& PushRsp::sendname() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.sendname)
  return sendname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_sendname(const ::std::string& value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.sendname)
}
void PushRsp::set_sendname(const char* value) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.sendname)
}
void PushRsp::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  sendname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.sendname)
}
::std::string* PushRsp::mutable_sendname() {
  set_has_sendname();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.sendname)
  return sendname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_sendname() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.sendname)
  clear_has_sendname();
  return sendname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_sendname(::std::string* sendname) {
  if (sendname != NULL) {
    set_has_sendname();
  } else {
    clear_has_sendname();
  }
  sendname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendname);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.sendname)
}

// required string senduserid = 10;
bool PushRsp::has_senduserid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PushRsp::set_has_senduserid() {
  _has_bits_[0] |= 0x00000200u;
}
void PushRsp::clear_has_senduserid() {
  _has_bits_[0] &= ~0x00000200u;
}
void PushRsp::clear_senduserid() {
  senduserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senduserid();
}
const ::std::string& PushRsp::senduserid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.senduserid)
  return senduserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_senduserid(const ::std::string& value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.senduserid)
}
void PushRsp::set_senduserid(const char* value) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.senduserid)
}
void PushRsp::set_senduserid(const char* value, size_t size) {
  set_has_senduserid();
  senduserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.senduserid)
}
::std::string* PushRsp::mutable_senduserid() {
  set_has_senduserid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.senduserid)
  return senduserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_senduserid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.senduserid)
  clear_has_senduserid();
  return senduserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_senduserid(::std::string* senduserid) {
  if (senduserid != NULL) {
    set_has_senduserid();
  } else {
    clear_has_senduserid();
  }
  senduserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senduserid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.senduserid)
}

// required string converstionid = 11;
bool PushRsp::has_converstionid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PushRsp::set_has_converstionid() {
  _has_bits_[0] |= 0x00000400u;
}
void PushRsp::clear_has_converstionid() {
  _has_bits_[0] &= ~0x00000400u;
}
void PushRsp::clear_converstionid() {
  converstionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_converstionid();
}
const ::std::string& PushRsp::converstionid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.converstionid)
  return converstionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_converstionid(const ::std::string& value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.converstionid)
}
void PushRsp::set_converstionid(const char* value) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MarsMsgChat.PushRsp.converstionid)
}
void PushRsp::set_converstionid(const char* value, size_t size) {
  set_has_converstionid();
  converstionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MarsMsgChat.PushRsp.converstionid)
}
::std::string* PushRsp::mutable_converstionid() {
  set_has_converstionid();
  // @@protoc_insertion_point(field_mutable:MarsMsgChat.PushRsp.converstionid)
  return converstionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushRsp::release_converstionid() {
  // @@protoc_insertion_point(field_release:MarsMsgChat.PushRsp.converstionid)
  clear_has_converstionid();
  return converstionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushRsp::set_allocated_converstionid(::std::string* converstionid) {
  if (converstionid != NULL) {
    set_has_converstionid();
  } else {
    clear_has_converstionid();
  }
  converstionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), converstionid);
  // @@protoc_insertion_point(field_set_allocated:MarsMsgChat.PushRsp.converstionid)
}

// required int32 sendtype = 12;
bool PushRsp::has_sendtype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PushRsp::set_has_sendtype() {
  _has_bits_[0] |= 0x00000800u;
}
void PushRsp::clear_has_sendtype() {
  _has_bits_[0] &= ~0x00000800u;
}
void PushRsp::clear_sendtype() {
  sendtype_ = 0;
  clear_has_sendtype();
}
::google::protobuf::int32 PushRsp::sendtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.sendtype)
  return sendtype_;
}
void PushRsp::set_sendtype(::google::protobuf::int32 value) {
  set_has_sendtype();
  sendtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.sendtype)
}

// required int32 msgtype = 13;
bool PushRsp::has_msgtype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PushRsp::set_has_msgtype() {
  _has_bits_[0] |= 0x00001000u;
}
void PushRsp::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00001000u;
}
void PushRsp::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 PushRsp::msgtype() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.msgtype)
  return msgtype_;
}
void PushRsp::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.msgtype)
}

// required int64 msgid = 14;
bool PushRsp::has_msgid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PushRsp::set_has_msgid() {
  _has_bits_[0] |= 0x00002000u;
}
void PushRsp::clear_has_msgid() {
  _has_bits_[0] &= ~0x00002000u;
}
void PushRsp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
  clear_has_msgid();
}
::google::protobuf::int64 PushRsp::msgid() const {
  // @@protoc_insertion_point(field_get:MarsMsgChat.PushRsp.msgid)
  return msgid_;
}
void PushRsp::set_msgid(::google::protobuf::int64 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:MarsMsgChat.PushRsp.msgid)
}

inline const PushRsp* PushRsp::internal_default_instance() {
  return &PushRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MarsMsgChat

// @@protoc_insertion_point(global_scope)
